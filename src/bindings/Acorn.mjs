// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Debug from "../Debug.mjs";
import * as AcornWalk from "acorn-walk";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var Walk = {};

function collectExportedFunctionNames(parsed) {
  var functions = [];
  var walker = {
    ExportNamedDeclaration: (function (node) {
        return Belt_Option.forEach(Caml_option.undefined_to_opt(node.declaration), (function (declaration) {
                      var match = declaration.type;
                      if (match === undefined) {
                        return ;
                      }
                      if (match !== "FunctionDeclaration") {
                        return ;
                      }
                      var name = declaration.id.name;
                      functions.push(name);
                      
                    }));
      })
  };
  AcornWalk.simple(parsed, walker);
  return functions;
}

Debug.assignToWindowForDeveloperDebug("parsed", 10);

var source = "function getIssue(payload) {\n    return payload.WatchForIssue?.data?.github?.issueCommentEvent?.issue;\n  }\n  \n  export function getIssueId(payload) {\n    return getIssue(payload)?.id;\n  }\n\n  function unexported(){\n      true\n  }\n  \n\n  export const me = 199;\n\n  export const something = unexported\n\n  export const other = function wow() { true }\n\n  export function final() { true }\n\n  export function getIssueTitle(payload) {\n    const issue = getIssue(payload);\n  \n    const rateLimit = payload.GitHubRateLimits.data.gitHub.rateLimit;\n  \n    if (issue) {\n      if (rateLimit.remaining < 4990) {\n        return null;\n      }\n  \n      if (rateLimit.remaining < 4995) {\n        return `Sorry, API limits are low, will reset at ${rateLimit.resetAt}`;\n      }\n  \n      const totalComments = issue.comments.totalCount;\n      const totalReactions = issue.reactions.totalCount;\n  \n      return `This GitHub issue has ${totalComments} comments and ${totalReactions} reactions`;\n    }\n  }";

export {
  Walk ,
  source ,
  collectExportedFunctionNames ,
  
}
/*  Not a pure module */
