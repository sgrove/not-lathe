// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as $$Navigator from "./bindings/Navigator.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var services = Js_dict.fromArray([
      [
        "adroll",
        [
          "adroll.com",
          "Adroll"
        ]
      ],
      [
        "box",
        [
          "box.com",
          "Box"
        ]
      ],
      [
        "dev-to",
        [
          "dev.to",
          "Dev.to"
        ]
      ],
      [
        "dribbble",
        [
          "dribbble.com",
          "Dribbble"
        ]
      ],
      [
        "dropbox",
        [
          "dropbox.com",
          "Dropbox"
        ]
      ],
      [
        "contentful",
        [
          "contentful.com",
          "Contentful"
        ]
      ],
      [
        "eggheadio",
        [
          "eggheadio.com",
          "Egghead.io"
        ]
      ],
      [
        "eventil",
        [
          "eventil.com",
          "Eventil"
        ]
      ],
      [
        "facebook",
        [
          "facebook.com",
          "Facebook"
        ]
      ],
      [
        "github",
        [
          "github.com",
          "GitHub"
        ]
      ],
      [
        "gmail",
        [
          "gmail.com",
          "Gmail"
        ]
      ],
      [
        "google",
        [
          "google.com",
          "Google"
        ]
      ],
      [
        "google-ads",
        [
          "google-ads.com",
          "Google Ads"
        ]
      ],
      [
        "google-analytics",
        [
          "google-analytics.com",
          "Google Analytics"
        ]
      ],
      [
        "google-calendar",
        [
          "google-calendar.com",
          "Google Calendar"
        ]
      ],
      [
        "google-compute",
        [
          "google-compute.com",
          "Google Compute"
        ]
      ],
      [
        "google-docs",
        [
          "google-docs.com",
          "Google Docs"
        ]
      ],
      [
        "google-search-console",
        [
          "google-search-console.com",
          "Google Search Console"
        ]
      ],
      [
        "google-translate",
        [
          "google-translate.com",
          "Google Translate"
        ]
      ],
      [
        "hubspot",
        [
          "hubspot.com",
          "Hubspot"
        ]
      ],
      [
        "intercom",
        [
          "intercom.com",
          "Intercom"
        ]
      ],
      [
        "mailchimp",
        [
          "mailchimp.com",
          "Mailchimp"
        ]
      ],
      [
        "meetup",
        [
          "meetup.com",
          "Meetup"
        ]
      ],
      [
        "netlify",
        [
          "netlify.com",
          "Netlify"
        ]
      ],
      [
        "product-hunt",
        [
          "product-hunt.com",
          "Product Hunt"
        ]
      ],
      [
        "quickbooks",
        [
          "quickbooks.com",
          "QuickBooks"
        ]
      ],
      [
        "salesforce",
        [
          "salesforce.com",
          "Salesforce"
        ]
      ],
      [
        "slack",
        [
          "slack.com",
          "Slack"
        ]
      ],
      [
        "spotify",
        [
          "spotify.com",
          "Spotify"
        ]
      ],
      [
        "stripe",
        [
          "stripe.com",
          "Stripe"
        ]
      ],
      [
        "trello",
        [
          "trello.com",
          "Trello"
        ]
      ],
      [
        "twilio",
        [
          "twilio.com",
          "Twilio"
        ]
      ],
      [
        "twitter",
        [
          "twitter.com",
          "Twitter"
        ]
      ],
      [
        "twitch-tv",
        [
          "twitch-tv.com",
          "Twitch"
        ]
      ],
      [
        "ynab",
        [
          "ynab.com",
          "You Need a Budget"
        ]
      ],
      [
        "youtube",
        [
          "youtube.com",
          "YouTube"
        ]
      ],
      [
        "zeit",
        [
          "vercel.com",
          "Vercel"
        ]
      ],
      [
        "zendesk",
        [
          "zendesk.com",
          "Zendesk"
        ]
      ],
      [
        "airtable",
        [
          "airtable.com",
          "Airtable"
        ]
      ],
      [
        "apollo",
        [
          "apollo.com",
          "Apollo"
        ]
      ],
      [
        "brex",
        [
          "brex.com",
          "Brex"
        ]
      ],
      [
        "bundlephobia",
        [
          "bundlephobia.com",
          "Bundlephobia"
        ]
      ],
      [
        "clearbit",
        [
          "clearbit.com",
          "Clearbit"
        ]
      ],
      [
        "cloudflare",
        [
          "cloudflare.com",
          "Cloudflare"
        ]
      ],
      [
        "crunchbase",
        [
          "crunchbase.com",
          "Crunchbase"
        ]
      ],
      [
        "fedex",
        [
          "fedex.com",
          "Fedex"
        ]
      ],
      [
        "google-maps",
        [
          "google-maps.com",
          "Google Maps"
        ]
      ],
      [
        "graphcms",
        [
          "graphcms.com",
          "GraphCMS"
        ]
      ],
      [
        "immigration-graph",
        [
          "immigration-graph.com",
          "Immigration Graph"
        ]
      ],
      [
        "logdna",
        [
          "logdna.com",
          "LogDNA"
        ]
      ],
      [
        "mixpanel",
        [
          "mixpanel.com",
          "Mixpanel"
        ]
      ],
      [
        "mux",
        [
          "mux.com",
          "Mux"
        ]
      ],
      [
        "npm",
        [
          "npmjs.com",
          "Npm"
        ]
      ],
      [
        "onegraph",
        [
          "onegraph.com",
          "OneGraph"
        ]
      ],
      [
        "orbit",
        [
          "orbit.com",
          "Orbit"
        ]
      ],
      [
        "open-collective",
        [
          "open-collective.com",
          "OpenCollective"
        ]
      ],
      [
        "ups",
        [
          "ups.com",
          "UPS"
        ]
      ],
      [
        "usps",
        [
          "usps.com",
          "USPS"
        ]
      ],
      [
        "wordpress",
        [
          "wordpress.com",
          "Wordpress"
        ]
      ],
      [
        "firebase",
        [
          "firebase.events",
          "Firebase"
        ]
      ],
      [
        "rss",
        [
          "rss.com",
          "RSS"
        ]
      ]
    ]);

function serviceImageUrl(sizeOpt, greyscaleOpt, service) {
  var size = sizeOpt !== undefined ? sizeOpt : 25;
  var greyscale = greyscaleOpt !== undefined ? greyscaleOpt : false;
  var domain = Js_dict.get(services, service);
  return Belt_Option.map(domain, (function (param) {
                return [
                        "//logo.clearbit.com/" + param[0] + "?size=" + String(size) + (
                          greyscale ? "greyscale=${greyscale->string_of_bool}" : ""
                        ),
                        param[1]
                      ];
              }));
}

function scrollY(param) {
  return Belt_Option.map(Caml_option.undefined_to_opt(typeof window === "undefined" ? undefined : window), (function ($$window) {
                return $$window.scrollY;
              }));
}

function locationOrigin(param) {
  return Belt_Option.map(Caml_option.undefined_to_opt(typeof window === "undefined" ? undefined : window), (function ($$window) {
                return $$window.location.origin;
              }));
}

function addEventListener($$event, handler) {
  return Belt_Option.forEach(Caml_option.undefined_to_opt(typeof window === "undefined" ? undefined : window), (function ($$window) {
                return $$window.addEventListener($$event, handler);
              }));
}

function removeEventListener($$event, handler) {
  return Belt_Option.forEach(Caml_option.undefined_to_opt(typeof window === "undefined" ? undefined : window), (function ($$window) {
                return $$window.removeEventListener($$event, handler);
              }));
}

var $$Window = {
  scrollY: scrollY,
  locationOrigin: locationOrigin,
  addEventListener: addEventListener,
  removeEventListener: removeEventListener
};

function timeAgo(date) {
  var dateMs = date.getTime();
  var now = Date.now();
  var value = now - dateMs;
  if (value < 30000) {
    return "Just now";
  }
  if (value < 45000) {
    return "30 seconds ago";
  }
  if (value < 60000 * 60) {
    var minutes = String(value / 60000 | 0);
    return minutes + " minutes ago";
  }
  if (value < 60000 * 60 * 24) {
    var hours = String(value / (60000 * 60) | 0);
    return hours + " hours ago";
  }
  if (value < 60000 * 60 * 24 * 7) {
    var days = String(value / (60000 * 60 * 24) | 0);
    return days + " days ago";
  }
  if (value < 60000 * 60 * 24 * 30) {
    var weeks = String(value / (60000 * 60 * 24 * 7) | 0);
    return weeks + " weeks ago";
  }
  if (value < 60000 * 60 * 24 * 30 * 12) {
    var months = String(value / (60000 * 60 * 24 * 7 * 30) | 0);
    return months + " months ago";
  }
  var years = String(value / (60000 * 60 * 24 * 7 * 30 * 12.0) | 0);
  return years + " years ago";
}

var $$Date = {
  timeAgo: timeAgo
};

var camelize = (function camelize(text) {
    return text.replace(/^([A-Z])|[\s-_]+(\w)/g, function(match, p1, p2, offset) {
        if (p2) return p2.toUpperCase();
        return p1.toLowerCase();        
    });
});

var capitalizeFirstLetter = (function capitalizeFirstLetter(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
});

var distinctStrings = (function(arr) {
return [...(new Set(arr))]
});

var safeNameRe = new RegExp("[^a-z0-9]", "gi");

function safeName(string) {
  return string.replace(safeNameRe, "");
}

function safeCamelize(string) {
  return camelize(string.replace(safeNameRe, "_"));
}

var replaceRange = (function replaceRange(s, start, end, substitute) {
    return s.substring(0, start) + substitute + s.substring(end);
});

var _hashToHslColor = (function getBackgroundColor(stringInput) {
    let stringUniqueHash = [...stringInput].reduce((acc, char) => {
      return char.charCodeAt(0) + ((acc << 5) - acc);
    }, 0);
    return `hsl(${stringUniqueHash % 360}, 95%, 35%)`;
  });

var hashToHslColor = _hashToHslColor;

var $$String$1 = {
  camelize: camelize,
  capitalizeFirstLetter: capitalizeFirstLetter,
  distinctStrings: distinctStrings,
  safeNameRe: safeNameRe,
  safeName: safeName,
  safeCamelize: safeCamelize,
  replaceRange: replaceRange,
  _hashToHslColor: _hashToHslColor,
  hashToHslColor: hashToHslColor
};

function create(param) {
  var match = typeof AudioContext === "undefined" ? undefined : AudioContext;
  var match$1 = typeof webkitAudioContext === "undefined" ? undefined : webkitAudioContext;
  var match$2 = typeof mozAudioContext === "undefined" ? undefined : mozAudioContext;
  if (match !== undefined) {
    return Caml_option.some(new AudioContext());
  } else if (match$1 !== undefined) {
    return Caml_option.some(new webkitAudioContext());
  } else if (match$2 !== undefined) {
    return Caml_option.some(new mozAudioContext());
  } else {
    return ;
  }
}

var $$AudioContext$1 = {
  create: create
};

var Analyser = {};

var Source = {};

function monitorAudio(audio, onAudioProcess) {
  var audioContext = create(undefined);
  if (audioContext === undefined) {
    return ;
  }
  var audioContext$1 = Caml_option.valFromOption(audioContext);
  var analyser = audioContext$1.createScriptProcessor(1024, 1, 1);
  var source = audioContext$1.createMediaStreamSource(audio);
  source.connect(analyser);
  analyser.connect(audioContext$1.destination);
  analyser.onaudioprocess = onAudioProcess;
  
}

function getUserAudio(onSuccess, onError) {
  return Belt_Option.forEach($$Navigator.$$MediaDevices.getUserAudio(undefined), (function (promise) {
                var __x = promise.then(function (stream) {
                      onSuccess(stream);
                      return Promise.resolve(undefined);
                    });
                __x.catch(function (error) {
                      onError(error);
                      return Promise.resolve(undefined);
                    });
                
              }));
}

var $$Audio = {
  $$AudioContext: $$AudioContext$1,
  Analyser: Analyser,
  Source: Source,
  monitorAudio: monitorAudio,
  getUserAudio: getUserAudio
};

export {
  services ,
  serviceImageUrl ,
  $$Window ,
  $$Date ,
  $$String$1 as $$String,
  $$Audio ,
  
}
/* services Not a pure module */
