// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Chain from "../Chain.js";
import * as Comps from "./Comps.js";
import * as Curry from "bs-platform/lib/es6/curry.mjs";
import * as React from "react";
import * as Caml_option from "bs-platform/lib/es6/caml_option.mjs";
import * as ChainEditor from "./ChainEditor.js";
import * as DevTime_JsonJs from "../DevTime_Json.js";

var devJsonChain = DevTime_JsonJs.devJsonChain;

var simpleChain = DevTime_JsonJs.simpleChain;

var spotifyChain = DevTime_JsonJs.spotifyChain;

var DevTimeJson = {
  devJsonChain: devJsonChain,
  simpleChain: simpleChain,
  spotifyChain: spotifyChain
};

function Studio(Props) {
  var schema = Props.schema;
  var config = Props.config;
  var match = React.useState(function () {
        return devJsonChain;
      });
  var setInitialChain = match[1];
  var initialChain = match[0];
  var navButton = function (onClick, onDoubleClick, content) {
    var tmp = {
      className: "mr-2 ml-2",
      onClick: onClick
    };
    if (onDoubleClick !== undefined) {
      tmp.onDoubleClick = Caml_option.valFromOption(onDoubleClick);
    }
    return React.createElement("button", tmp, content);
  };
  return React.createElement("div", undefined, React.createElement("nav", {
                  className: "p-4 bg-black text-white",
                  style: {
                    backgroundColor: Comps.colors["gray-12"],
                    color: Comps.colors["gray-11"]
                  }
                }, navButton((function (param) {
                        
                      }), undefined, "OneGraph >"), navButton((function (param) {
                        
                      }), undefined, "Workspace >"), navButton((function (param) {
                        
                      }), (function (param) {
                        var newName = prompt("Rename chain", initialChain.name);
                        if (newName !== undefined && newName !== "") {
                          return Curry._1(setInitialChain, (function (oldChain) {
                                        return {
                                                name: newName,
                                                script: oldChain.script,
                                                scriptDependencies: oldChain.scriptDependencies,
                                                requests: oldChain.requests,
                                                blocks: oldChain.blocks
                                              };
                                      }));
                        }
                        
                      }), React.createElement("strong", undefined, initialChain.name))), React.createElement(ChainEditor.make, {
                  schema: schema,
                  initialChain: initialChain,
                  config: config
                }));
}

var make = Studio;

export {
  DevTimeJson ,
  make ,
  
}
/* devJsonChain Not a pure module */
