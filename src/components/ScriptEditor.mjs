// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Yjs from "../bindings/Yjs.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Debug from "../Debug.mjs";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as SharedRooms from "./SharedRooms.mjs";
import * as BsReactMonaco from "../bindings/BsReactMonaco.mjs";
import * as RelayRuntime from "relay-runtime";
import * as ConnectionContext from "./ConnectionContext.mjs";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as AudioStreamContext from "./AudioStreamContext.mjs";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as ScriptEditor_source_graphql from "../__generated__/ScriptEditor_source_graphql.mjs";
import * as ScriptEditor_OneGraphMutation_graphql from "../__generated__/ScriptEditor_OneGraphMutation_graphql.mjs";

function use(fRef) {
  var data = Hooks.useFragment(ScriptEditor_source_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(ScriptEditor_source_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(ScriptEditor_source_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return ScriptEditor_source_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var ScriptEditorFragment = {
  Types: undefined,
  use: use,
  useOpt: useOpt
};

function commitMutation(environment, variables, optimisticUpdater, optimisticResponse, updater, onCompleted, onError, uploadables, param) {
  return RelayRuntime.commitMutation(environment, {
              mutation: ScriptEditor_OneGraphMutation_graphql.node,
              variables: ScriptEditor_OneGraphMutation_graphql.Internal.convertVariables(variables),
              onCompleted: (function (res, err) {
                  if (onCompleted !== undefined) {
                    return Curry._2(onCompleted, ScriptEditor_OneGraphMutation_graphql.Internal.convertResponse(res), (err == null) ? undefined : Caml_option.some(err));
                  }
                  
                }),
              onError: (function (err) {
                  if (onError !== undefined) {
                    return Curry._1(onError, (err == null) ? undefined : Caml_option.some(err));
                  }
                  
                }),
              optimisticResponse: optimisticResponse !== undefined ? ScriptEditor_OneGraphMutation_graphql.Internal.convertWrapRawResponse(optimisticResponse) : undefined,
              optimisticUpdater: optimisticUpdater,
              updater: updater !== undefined ? (function (store, r) {
                    return Curry._2(updater, store, ScriptEditor_OneGraphMutation_graphql.Internal.convertResponse(r));
                  }) : undefined,
              uploadables: uploadables
            });
}

function use$1(param) {
  var match = Hooks.useMutation(ScriptEditor_OneGraphMutation_graphql.node);
  var mutate = match[0];
  return [
          React.useMemo((function () {
                  return function (param, param$1, param$2, param$3, param$4, param$5, param$6, param$7, param$8) {
                    return Curry._1(mutate, {
                                onError: param,
                                onCompleted: param$1 !== undefined ? (function (r, errors) {
                                      return Curry._2(param$1, ScriptEditor_OneGraphMutation_graphql.Internal.convertResponse(r), (errors == null) ? undefined : Caml_option.some(errors));
                                    }) : undefined,
                                onUnsubscribe: param$2,
                                optimisticResponse: param$3 !== undefined ? ScriptEditor_OneGraphMutation_graphql.Internal.convertWrapRawResponse(param$3) : undefined,
                                optimisticUpdater: param$4,
                                updater: param$5 !== undefined ? (function (store, r) {
                                      return Curry._2(param$5, store, ScriptEditor_OneGraphMutation_graphql.Internal.convertResponse(r));
                                    }) : undefined,
                                variables: ScriptEditor_OneGraphMutation_graphql.Internal.convertVariables(param$6),
                                uploadables: param$7
                              });
                  };
                }), [mutate]),
          match[1]
        ];
}

var UpdateScriptMutation_make_oneGraphUpdateChainScriptSourceArg = ScriptEditor_OneGraphMutation_graphql.Utils.make_oneGraphUpdateChainScriptSourceArg;

var UpdateScriptMutation_make_oneGraphUpdateChainScriptInput = ScriptEditor_OneGraphMutation_graphql.Utils.make_oneGraphUpdateChainScriptInput;

var UpdateScriptMutation_makeVariables = ScriptEditor_OneGraphMutation_graphql.Utils.makeVariables;

var UpdateScriptMutation_make_response_oneGraph_updateChainScript_script = ScriptEditor_OneGraphMutation_graphql.Utils.make_response_oneGraph_updateChainScript_script;

var UpdateScriptMutation_make_response_oneGraph_updateChainScript = ScriptEditor_OneGraphMutation_graphql.Utils.make_response_oneGraph_updateChainScript;

var UpdateScriptMutation_make_response_oneGraph = ScriptEditor_OneGraphMutation_graphql.Utils.make_response_oneGraph;

var UpdateScriptMutation_makeOptimisticResponse = ScriptEditor_OneGraphMutation_graphql.Utils.makeOptimisticResponse;

var UpdateScriptMutation = {
  make_oneGraphUpdateChainScriptSourceArg: UpdateScriptMutation_make_oneGraphUpdateChainScriptSourceArg,
  make_oneGraphUpdateChainScriptInput: UpdateScriptMutation_make_oneGraphUpdateChainScriptInput,
  makeVariables: UpdateScriptMutation_makeVariables,
  make_response_oneGraph_updateChainScript_script: UpdateScriptMutation_make_response_oneGraph_updateChainScript_script,
  make_response_oneGraph_updateChainScript: UpdateScriptMutation_make_response_oneGraph_updateChainScript,
  make_response_oneGraph: UpdateScriptMutation_make_response_oneGraph,
  makeOptimisticResponse: UpdateScriptMutation_makeOptimisticResponse,
  Types: undefined,
  commitMutation: commitMutation,
  use: use$1
};

function ScriptEditor(Props) {
  var script = Props.script;
  var className = Props.className;
  var onMount = Props.onMount;
  var onPotentialScriptSourceConnect = Props.onPotentialScriptSourceConnect;
  var chainName = Props.chainName;
  var source = use(script);
  var match = use$1(undefined);
  React.useState(function () {
        return Belt_Option.getWithDefault(source.textualSource, "");
      });
  React.useState(function () {
        return [];
      });
  var ydocument = React.useRef(undefined);
  var editor = React.useRef(undefined);
  var monaco = React.useRef(undefined);
  var filename = "file://" + source.filename;
  React.useEffect((function () {
          var match = monaco.current;
          var match$1 = editor.current;
          var match$2 = source.concurrentSource;
          var exit = 0;
          if (match !== undefined && match$1 !== undefined && match$2 !== undefined) {
            var editor$1 = Caml_option.valFromOption(match$1);
            var sharedRoom = SharedRooms.idempotentCreate(chainName, match$2, undefined, {
                  name: "sgrove",
                  color: "#ffb61e"
                }, undefined);
            var text = sharedRoom.document.getText("monaco");
            var shouldConnect = sharedRoom.provider.shouldConnect;
            if (shouldConnect) {
              sharedRoom.provider.connect();
            }
            ydocument.current = Caml_option.some(sharedRoom.document);
            var model = editor$1.getModel(filename);
            var editors = Yjs.makeSet([editor$1]);
            Yjs.Monaco.createBinding(text.toString(), text, model, editors, sharedRoom.provider.awareness);
          } else {
            exit = 1;
          }
          if (exit === 1) {
            console.log("Delaying monaco binding... ", [
                  match,
                  match$1,
                  match$2
                ]);
          }
          
        }), [
        monaco.current,
        editor.current,
        source.id
      ]);
  React.useState(function () {
        return [];
      });
  var connectionDrag = React.useContext(ConnectionContext.context);
  var connectionDragRef = React.useRef(connectionDrag);
  React.useContext(AudioStreamContext.context);
  var tmp = {
    height: "100%",
    language: "typescript",
    theme: "vs-dark",
    options: {
      minimap: {
        enabled: false
      },
      contextmenu: false,
      contextMenu: false
    },
    onChange: (function (newScript, param) {
        
      }),
    onMount: (function (editorHandle, monacoInstance) {
        Debug.assignToWindowForDeveloperDebug("myEditor", editorHandle);
        Debug.assignToWindowForDeveloperDebug("myMonaco", monacoInstance);
        editorHandle.onMouseUp(function (mouseEvent) {
              var match = connectionDragRef.current;
              if (typeof match === "number") {
                return ;
              }
              if (match.TAG !== /* StartedSource */0) {
                return ;
              }
              var position = mouseEvent.target.position;
              var lineNumber = position.lineNumber;
              var column = position.column;
              var $$event = mouseEvent.event;
              var mousePositionX = $$event.posx;
              var mousePositionY = $$event.posy;
              var mousePosition = [
                mousePositionX,
                mousePositionY
              ];
              return Curry._4(onPotentialScriptSourceConnect, match.sourceRequest, match.sourceDom, {
                          lineNumber: lineNumber,
                          column: column
                        }, mousePosition);
            });
        BsReactMonaco.registerPrettier(monacoInstance);
        var modelOptions = {
          tabSize: 2
        };
        editorHandle.getModel(filename).updateOptions(modelOptions);
        editor.current = Caml_option.some(editorHandle);
        monaco.current = Caml_option.some(monacoInstance);
        return Curry._2(onMount, editorHandle, monacoInstance);
      }),
    path: filename
  };
  if (className !== undefined) {
    tmp.className = className;
  }
  return React.createElement("div", {
              style: {
                height: "calc(100vh - 40px - 384px - 56px)"
              }
            }, match[1] ? "Saving..." : null, React.createElement(BsReactMonaco.Editor.make, tmp));
}

var make = ScriptEditor;

export {
  ScriptEditorFragment ,
  UpdateScriptMutation ,
  make ,
  
}
/* Yjs Not a pure module */
