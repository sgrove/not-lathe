// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function Icons$Play(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zM9 18V6l10 6-10 6z",
                  fill: color
                }));
}

var Play = {
  make: Icons$Play
};

function Icons$Inspect(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    enableBackground: "new 0 0 330 330",
    version: "1.1",
    viewBox: "0 0 330 330",
    x: "0",
    xmlns: "http://www.w3.org/2000/svg",
    xmlSpace: "preserve",
    y: "0"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M325.606 304.393l-42.276-42.275c10.49-14.716 16.666-32.71 16.666-52.118 0-26.593-11.598-50.526-29.996-67.017V75.001c0-8.284-6.716-15-15-15h-45v-45c0-8.284-6.716-15-15-15H75c-8.284 0-15 6.716-15 15v45H15c-8.284 0-15 6.716-15 15V235c0 8.284 6.716 15 15 15h114.391c14.752 29.608 45.34 50 80.605 50 19.41 0 37.404-6.177 52.122-16.668l42.275 42.275C307.322 328.535 311.161 330 315 330s7.678-1.464 10.606-4.393c5.859-5.859 5.859-15.356 0-21.214zM90 30.001h90v30H90v-30zM30 220V90.001h210v35.148A89.593 89.593 0 00209.996 120c-49.626 0-90 40.374-90 90 0 3.38.193 6.715.559 10H30zm119.996-10c0-33.084 26.916-60 60-60s60 26.916 60 60-26.916 60-60 60-60-26.916-60-60z",
                  fill: color
                }));
}

var Inspect = {
  make: Icons$Inspect
};

function Icons$GraphQL(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    "aria-hidden": true,
    height: height,
    width: width,
    transform: "rotate(360)",
    viewBox: "0 0 256 288",
    xmlns: "http://www.w3.org/2000/svg"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M152.576 32.963l59.146 34.15a25.819 25.819 0 015.818-4.604c12.266-7.052 27.912-2.865 35.037 9.402 7.052 12.267 2.865 27.912-9.402 35.037a25.698 25.698 0 01-6.831 2.72v68.325a25.7 25.7 0 016.758 2.702c12.34 7.125 16.527 22.771 9.402 35.038-7.052 12.266-22.771 16.453-35.038 9.402a25.464 25.464 0 01-6.34-5.147l-58.786 33.94a25.671 25.671 0 011.295 8.08c0 14.103-11.458 25.636-25.635 25.636-14.177 0-25.635-11.46-25.635-25.636 0-2.52.362-4.954 1.037-7.253l-59.13-34.14a25.824 25.824 0 01-5.738 4.52c-12.34 7.051-27.986 2.864-35.038-9.402-7.051-12.267-2.864-27.913 9.402-35.038a25.71 25.71 0 016.758-2.703v-68.324a25.698 25.698 0 01-6.831-2.72C.558 99.897-3.629 84.178 3.423 71.911c7.052-12.267 22.77-16.454 35.037-9.402a25.82 25.82 0 015.79 4.575l59.163-34.159a25.707 25.707 0 01-1.048-7.29C102.365 11.46 113.823 0 128 0c14.177 0 25.635 11.459 25.635 25.635 0 2.548-.37 5.007-1.059 7.328zm-6.162 10.522l59.287 34.23a25.599 25.599 0 002.437 19.831c3.609 6.278 9.488 10.44 16.013 12.062v68.41c-.333.081-.664.17-.993.264L145.725 44.17c.234-.224.464-.452.689-.684zm-36.123.7l-77.432 134.11a25.824 25.824 0 00-1.01-.27v-68.417c6.525-1.622 12.404-5.784 16.013-12.062a25.6 25.6 0 002.427-19.869l59.27-34.22c.239.247.483.49.732.727zm24.872 6.075l77.414 134.08a25.492 25.492 0 00-4.513 5.757 25.7 25.7 0 00-2.702 6.758H50.64a25.71 25.71 0 00-2.704-6.758 25.825 25.825 0 00-4.506-5.724l77.429-134.107A25.715 25.715 0 00128 51.27c2.487 0 4.89-.352 7.163-1.01zm11.795 194.478l58.902-34.008a25.865 25.865 0 01-.473-1.682H50.607a25.87 25.87 0 01-.266.992l59.19 34.175A25.558 25.558 0 01128 236.373a25.564 25.564 0 0118.958 8.365z",
                  fill: color,
                  fillRule: "evenodd"
                }));
}

var GraphQL = {
  make: Icons$GraphQL
};

function Icons$PureScript(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M19.166 4.6l-1.24 1.24 3.97 3.97-3.97 3.97 1.24 1.24 4.58-4.6a.87.87 0 000-1.23zM6.955 6.74l1.87 1.75h8.23l-1.87-1.75zm-2.1 2.24l-4.6 4.6a.87.87 0 000 1.23l4.6 4.59 1.23-1.24-3.97-3.97 3.97-3.97-1.24-1.24zm3.97 2.14l-1.87 1.76h8.23l1.87-1.76zm-1.87 4.39l1.87 1.75h8.23l-1.87-1.75z",
                  fill: color
                }));
}

var PureScript = {
  make: Icons$PureScript
};

function Icons$TypeScript(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var onClick = Props.onClick;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  if (onClick !== undefined) {
    tmp.onClick = Caml_option.valFromOption(onClick);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M1.125 0C.502 0 0 .502 0 1.125v21.75C0 23.498.502 24 1.125 24h21.75c.623 0 1.125-.502 1.125-1.125V1.125C24 .502 23.498 0 22.875 0zm17.363 9.75c.612 0 1.154.037 1.627.111a6.38 6.38 0 011.306.34v2.458a3.95 3.95 0 00-.643-.361 5.093 5.093 0 00-.717-.26 5.453 5.453 0 00-1.426-.2c-.3 0-.573.028-.819.086a2.1 2.1 0 00-.623.242c-.17.104-.3.229-.393.374a.888.888 0 00-.14.49c0 .196.053.373.156.529.104.156.252.304.443.444s.423.276.696.41c.273.135.582.274.926.416.47.197.892.407 1.266.628.374.222.695.473.963.753.268.279.472.598.614.957.142.359.214.776.214 1.253 0 .657-.125 1.21-.373 1.656a3.033 3.033 0 01-1.012 1.085 4.38 4.38 0 01-1.487.596c-.566.12-1.163.18-1.79.18a9.916 9.916 0 01-1.84-.164 5.544 5.544 0 01-1.512-.493v-2.63a5.033 5.033 0 003.237 1.2c.333 0 .624-.03.872-.09.249-.06.456-.144.623-.25.166-.108.29-.234.373-.38a1.023 1.023 0 00-.074-1.089 2.12 2.12 0 00-.537-.5 5.597 5.597 0 00-.807-.444 27.72 27.72 0 00-1.007-.436c-.918-.383-1.602-.852-2.053-1.405-.45-.553-.676-1.222-.676-2.005 0-.614.123-1.141.369-1.582.246-.441.58-.804 1.004-1.089a4.494 4.494 0 011.47-.629 7.536 7.536 0 011.77-.201zm-15.113.188h9.563v2.166H9.506v9.646H6.789v-9.646H3.375z",
                  fill: color
                }));
}

var TypeScript = {
  make: Icons$TypeScript
};

function Icons$Export(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 90 112.5",
    x: "0",
    xmlns: "http://www.w3.org/2000/svg",
    y: "0"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M65.261 76.833L13.167 76.833 13.167 24.739 44.511 24.739 53.428 15.823 4.25 15.823 4.25 85.75 74.177 85.75 74.177 36.572 65.261 45.489z",
                  fill: color
                }), React.createElement("path", {
                  d: "M54.385 8.53L63.438 17.582 23.67 57.349 32.651 66.33 60.629 38.351 69.546 29.434 72.418 26.562 81.47 35.615 85.75 4.25z",
                  fill: color
                }));
}

var Export = {
  make: Icons$Export
};

function Icons$Trash(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 24 24"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M6 19C6 20.1 6.9 21 8 21H16C17.1 21 18 20.1 18 19V7H6V19ZM8 9H16V19H8V9ZM15.5 4L14.5 3H9.5L8.5 4H5V6H19V4H15.5Z",
                  fill: color
                }));
}

var Trash = {
  make: Icons$Trash
};

function Icons$Search(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 24 24"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z",
                  fill: color
                }));
}

var Search = {
  make: Icons$Search
};

function Icons$CaretUp(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M13.825 12.8417L10 9.02501L6.175 12.8417L5 11.6667L10 6.66667L15 11.6667L13.825 12.8417Z",
                  fill: color
                }));
}

var CaretUp = {
  make: Icons$CaretUp
};

function Icons$CaretRight(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M7.15832 6.175L10.975 10L7.15833 13.825L8.33333 15L13.3333 10L8.33332 5L7.15832 6.175Z",
                  fill: color
                }));
}

var CaretRight = {
  make: Icons$CaretRight
};

function Icons$Prettier$Dark(Props) {
  var className = Props.className;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 210 210",
    xmlns: "http://www.w3.org/2000/svg"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("g", {
                  fill: "none",
                  fillRule: "evenodd",
                  stroke: "none",
                  strokeWidth: "1"
                }, React.createElement("g", undefined, React.createElement("g", undefined, React.createElement("g", {
                              transform: "translate(0 200)"
                            }, React.createElement("rect", {
                                  height: "10",
                                  width: "60",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "150",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "70",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "70",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "60",
                                  fill: "#EA5E5E",
                                  rx: "5",
                                  x: "0",
                                  y: "0"
                                })), React.createElement("g", {
                              transform: "translate(0 180)"
                            }, React.createElement("rect", {
                                  height: "10",
                                  width: "50",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "160",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "20",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "130",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "50",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "70",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "20",
                                  fill: "#F7B93E",
                                  rx: "5",
                                  x: "40",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "30",
                                  fill: "#56B3B4",
                                  rx: "5",
                                  x: "0",
                                  y: "0"
                                })), React.createElement("g", {
                              transform: "translate(0 160)"
                            }, React.createElement("rect", {
                                  height: "10",
                                  width: "100",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "110",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "30",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "70",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "60",
                                  fill: "#BF85BF",
                                  rx: "5",
                                  x: "0",
                                  y: "0"
                                })), React.createElement("g", {
                              transform: "translate(0 140)"
                            }, React.createElement("rect", {
                                  height: "10",
                                  width: "30",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "180",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "30",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "140",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "100",
                                  fill: "#F7B93E",
                                  rx: "5",
                                  x: "30",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "20",
                                  fill: "#BF85BF",
                                  rx: "5",
                                  x: "0",
                                  y: "0"
                                })), React.createElement("g", {
                              transform: "translate(0 120)"
                            }, React.createElement("rect", {
                                  height: "10",
                                  width: "40",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "170",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "40",
                                  fill: "#BF85BF",
                                  rx: "5",
                                  x: "120",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "50",
                                  fill: "#EA5E5E",
                                  rx: "5",
                                  x: "60",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "50",
                                  fill: "#56B3B4",
                                  rx: "5",
                                  x: "0",
                                  y: "0"
                                })), React.createElement("g", {
                              transform: "translate(0 100)"
                            }, React.createElement("rect", {
                                  height: "10",
                                  width: "30",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "180",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "90",
                                  fill: "#56B3B4",
                                  rx: "5",
                                  x: "80",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "40",
                                  fill: "#F7B93E",
                                  rx: "5",
                                  x: "30",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "20",
                                  fill: "#EA5E5E",
                                  rx: "5",
                                  x: "0",
                                  y: "0"
                                })), React.createElement("g", {
                              transform: "translate(0 80)"
                            }, React.createElement("rect", {
                                  height: "10",
                                  width: "20",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "190",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "60",
                                  fill: "#F7B93E",
                                  rx: "5",
                                  x: "120",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "40",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "70",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "60",
                                  fill: "#BF85BF",
                                  rx: "5",
                                  x: "0",
                                  y: "0"
                                })), React.createElement("g", {
                              transform: "translate(0 60)"
                            }, React.createElement("rect", {
                                  height: "10",
                                  width: "20",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "190",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "60",
                                  fill: "#EA5E5E",
                                  rx: "5",
                                  x: "120",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "40",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "70",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "20",
                                  fill: "#56B3B4",
                                  rx: "5",
                                  x: "40",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "30",
                                  fill: "#F7B93E",
                                  rx: "5",
                                  x: "0",
                                  y: "0"
                                })), React.createElement("g", {
                              transform: "translate(0 40)"
                            }, React.createElement("rect", {
                                  height: "10",
                                  width: "30",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "180",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "20",
                                  fill: "#56B3B4",
                                  rx: "5",
                                  x: "150",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "50",
                                  fill: "#BF85BF",
                                  rx: "5",
                                  x: "90",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "80",
                                  fill: "#56B3B4",
                                  rx: "5",
                                  x: "0",
                                  y: "0"
                                })), React.createElement("g", {
                              transform: "translate(0 20)"
                            }, React.createElement("rect", {
                                  height: "10",
                                  width: "40",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "170",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "110",
                                  fill: "#F7B93E",
                                  rx: "5",
                                  x: "50",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "40",
                                  fill: "#EA5E5E",
                                  rx: "5",
                                  x: "0",
                                  y: "0"
                                })), React.createElement("g", undefined, React.createElement("rect", {
                                  height: "10",
                                  width: "70",
                                  fill: "#4D616E",
                                  opacity: "0.5",
                                  rx: "5",
                                  x: "140",
                                  y: "0"
                                }), React.createElement("rect", {
                                  height: "10",
                                  width: "130",
                                  fill: "#56B3B4",
                                  rx: "5",
                                  x: "0",
                                  y: "0"
                                }))))));
}

var Dark = {
  make: Icons$Prettier$Dark
};

var Prettier = {
  Dark: Dark
};

function Icons$Form(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    enableBackground: "new 0 0 100 100",
    viewBox: "0 0 100 125",
    x: "0px",
    y: "0px"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("g", undefined, React.createElement("path", {
                      d: "M82.49,94.962H17.51V5.035h64.98V94.962z M19.112,93.359h61.775V6.637H19.112V93.359z",
                      fill: color
                    })), React.createElement("g", undefined, React.createElement("path", {
                      d: "M74.257,32.762H25.743V14.5h48.514V32.762z M27.345,31.159h45.309V16.102H27.345V31.159z",
                      fill: color
                    })), React.createElement("g", undefined, React.createElement("path", {
                      d: "M74.056,51.205H25.943v-9.532h48.112V51.205z M27.146,50.003h45.709v-7.128H27.146V50.003z",
                      fill: color
                    })), React.createElement("g", undefined, React.createElement("path", {
                      d: "M74.056,68.911H25.943V59.38h48.112V68.911z M27.146,67.71h45.709v-7.129H27.146V67.71z",
                      fill: color
                    })), React.createElement("g", undefined, React.createElement("path", {
                      d: "M35.952,86.143h-9.213v-9.214h9.213V86.143z M27.94,84.94h6.811V78.13H27.94V84.94z",
                      fill: color
                    })), React.createElement("g", undefined, React.createElement("path", {
                      d: "M73.968,86.143h-9.213v-9.214h9.213V86.143z M65.956,84.94h6.81V78.13h-6.81V84.94z",
                      fill: color
                    })), React.createElement("g", undefined, React.createElement("path", {
                      d: "M54.96,86.143h-9.213v-9.214h9.213V86.143z M46.948,84.94h6.811V78.13h-6.811V84.94z",
                      fill: color
                    })));
}

var Form = {
  make: Icons$Form
};

function Icons$Gears(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 418.879 418.879"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("g", undefined, React.createElement("g", undefined, React.createElement("path", {
                          d: "M188.634,234.066c8.462-5.287,16.126-11.735,22.767-19.127l23.942,13.826l21.8-37.76l-23.894-13.796\n\t\t\tc3.038-9.275,4.825-19.113,5.16-29.311l27.183-4.793l-7.574-42.938l-27.178,4.793c-3.756-9.309-8.795-17.965-14.906-25.744\n\t\t\tl17.766-21.17L200.3,30.022l-17.751,21.152c-8.67-4.646-18.059-8.119-27.954-10.203V13.385h-43.6v27.586\n\t\t\tc-9.896,2.084-19.285,5.557-27.956,10.203l-17.75-21.152l-33.4,28.025l17.764,21.17c-6.11,7.779-11.149,16.436-14.905,25.744\n\t\t\tL7.57,100.168L0,143.106l27.179,4.793c0.335,10.199,2.123,20.035,5.161,29.313L8.444,191.007l21.801,37.759l23.943-13.822\n\t\t\tc6.639,7.389,14.303,13.838,22.766,19.125l-9.451,25.963l40.972,14.91l9.438-25.928c4.864,0.688,9.831,1.053,14.882,1.053\n\t\t\tc5.051,0,10.019-0.363,14.883-1.053l9.437,25.93l40.97-14.914L188.634,234.066z M132.793,200.065\n\t\t\tc-30.702,0-55.68-24.977-55.68-55.68c0-30.701,24.978-55.68,55.68-55.68s55.68,24.979,55.68,55.68\n\t\t\tC188.473,175.088,163.496,200.065,132.793,200.065z",
                          fill: color
                        }), React.createElement("path", {
                          d: "M376.041,266.807l-18.795,6.08c-3.584-6.229-8.014-11.869-13.115-16.779l10.504-16.764l-26.447-16.57l-10.498,16.75\n\t\t\tc-6.604-2.438-13.602-3.973-20.826-4.471l-2.725-19.559l-30.912,4.309l2.725,19.559c-6.809,2.453-13.125,5.847-18.812,9.996\n\t\t\tl-14.672-13.244l-20.912,23.168l14.684,13.259c-3.562,6.118-6.277,12.752-8.02,19.726l-19.744-0.714l-1.129,31.188l19.743,0.716\n\t\t\tc1.246,7.198,3.486,13.991,6.558,20.271l-15.578,12.143l19.185,24.615l15.609-12.164c5.438,4.582,11.511,8.396,18.031,11.311\n\t\t\tl-4.138,19.344l30.522,6.52l4.133-19.314c3.516,0.01,7.072-0.229,10.652-0.727c3.582-0.498,7.07-1.25,10.447-2.215l9.256,17.451\n\t\t\tl27.574-14.623l-9.266-17.471c5.48-4.586,10.271-9.918,14.252-15.812l18.338,7.436l11.727-28.924l-18.303-7.422\n\t\t\tc1.234-6.875,1.529-14.027,0.764-21.293l18.799-6.084L376.041,266.807z M297.129,350.006\n\t\t\tc-21.771,3.031-41.949-12.209-44.98-33.977c-3.037-21.769,12.207-41.949,33.977-44.979c21.768-3.036,41.941,12.207,44.98,33.978\n\t\t\tC334.135,326.795,318.896,346.969,297.129,350.006z",
                          fill: color
                        }), React.createElement("path", {
                          d: "M418.146,158.647l0.732-24.629l-15.586-0.463c-0.977-5.428-2.723-10.803-5.285-15.971l12.24-9.67l-15.271-19.33\n\t\t\tl-12.238,9.666c-4.365-3.627-9.193-6.584-14.318-8.816l3.164-15.291l-24.123-4.996l-3.17,15.281\n\t\t\tc-5.559,0.008-11.156,0.797-16.641,2.412l-7.391-13.727l-21.695,11.684l7.391,13.729c-4.363,3.686-8.107,7.934-11.176,12.566\n\t\t\tl-14.496-5.77l-9.111,22.893l14.508,5.779c-0.955,5.508-1.141,11.158-0.514,16.799l-14.809,4.898l7.732,23.395l14.809-4.896\n\t\t\tc2.9,4.986,6.426,9.396,10.426,13.201l-8.191,13.268l20.963,12.946l8.209-13.292c5.285,1.896,10.828,3.051,16.453,3.414\n\t\t\tl2.252,15.453l24.383-3.561l-2.246-15.434c2.602-0.957,5.17-2.109,7.684-3.463c2.516-1.352,4.891-2.867,7.123-4.51l11.648,10.371\n\t\t\tl16.387-18.398l-11.656-10.383c2.795-4.9,4.875-10.164,6.203-15.619L418.146,158.647z M359.436,171.844\n\t\t\tc-15.281,8.227-34.404,2.492-42.627-12.783c-8.23-15.277-2.494-34.404,12.787-42.627c15.273-8.229,34.395-2.49,42.625,12.787\n\t\t\tC380.443,144.499,374.711,163.616,359.436,171.844z",
                          fill: color
                        }))));
}

var Gears = {
  make: Icons$Gears
};

function Icons$Save(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 453.03 453.03"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M388.49,0H0.022v453.03h452.986V64.561L388.49,0z M385.017,221.834H110.68V25.691h274.337V221.834z",
                  fill: color
                }), React.createElement("rect", {
                  height: "154.102",
                  width: "80.718",
                  fill: color,
                  x: "272.568",
                  y: "46.701"
                }));
}

var Save = {
  make: Icons$Save
};

function Icons$Link(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M3.24999 9.99998C3.24999 8.57498 4.40832 7.41665 5.83332 7.41665H9.16666V5.83331H5.83332C3.53332 5.83331 1.66666 7.69998 1.66666 9.99998C1.66666 12.3 3.53332 14.1666 5.83332 14.1666H9.16666V12.5833H5.83332C4.40832 12.5833 3.24999 11.425 3.24999 9.99998ZM6.66666 10.8333H13.3333V9.16665H6.66666V10.8333ZM14.1667 5.83331H10.8333V7.41665H14.1667C15.5917 7.41665 16.75 8.57498 16.75 9.99998C16.75 11.425 15.5917 12.5833 14.1667 12.5833H10.8333V14.1666H14.1667C16.4667 14.1666 18.3333 12.3 18.3333 9.99998C18.3333 7.69998 16.4667 5.83331 14.1667 5.83331Z",
                  fill: color
                }));
}

var Link = {
  make: Icons$Link
};

function Icons$RunLink(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    viewBox: "0 0 17 10"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M5 3.33333H11.6667V5H5V3.33333ZM15.0833 4.16667H16.6667C16.6667 1.86667 14.8 0 12.5 0H9.16667V1.58333H12.5C13.925 1.58333 15.0833 2.74167 15.0833 4.16667ZM1.58333 4.16667C1.58333 2.74167 2.74167 1.58333 4.16667 1.58333H7.5V0H4.16667C1.86667 0 0 1.86667 0 4.16667C0 6.46667 1.86667 8.33333 4.16667 8.33333H7.5V6.75H4.16667C2.74167 6.75 1.58333 5.59167 1.58333 4.16667Z",
                  fill: color
                }), React.createElement("path", {
                  d: "M12.5 4.33335V9.16667L16.6667 6.75L12.5 4.33335Z",
                  fill: color
                }), React.createElement("path", {
                  d: "M9.16667 6.75H11.3333V8.33333H9.16667V6.75Z",
                  fill: color
                }), React.createElement("path", {
                  d: "M16.6667 4.16667H15.0833L16.6667 5.34026V4.16667Z",
                  fill: color
                }));
}

var RunLink = {
  make: Icons$RunLink
};

function Icons$List(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M15.8333 4.16667V15.8333H4.16667V4.16667H15.8333ZM16.75 2.5H3.25C2.83333 2.5 2.5 2.83333 2.5 3.25V16.75C2.5 17.0833 2.83333 17.5 3.25 17.5H16.75C17.0833 17.5 17.5 17.0833 17.5 16.75V3.25C17.5 2.83333 17.0833 2.5 16.75 2.5ZM9.16667 5.83333H14.1667V7.5H9.16667V5.83333ZM9.16667 9.16667H14.1667V10.8333H9.16667V9.16667ZM9.16667 12.5H14.1667V14.1667H9.16667V12.5ZM5.83333 5.83333H7.5V7.5H5.83333V5.83333ZM5.83333 9.16667H7.5V10.8333H5.83333V9.16667ZM5.83333 12.5H7.5V14.1667H5.83333V12.5Z",
                  fill: color
                }));
}

var List = {
  make: Icons$List
};

function Icons$OpenInNew(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M15.8333 15.8333H4.16667V4.16667H10V2.5H4.16667C3.24167 2.5 2.5 3.25 2.5 4.16667V15.8333C2.5 16.75 3.24167 17.5 4.16667 17.5H15.8333C16.75 17.5 17.5 16.75 17.5 15.8333V10H15.8333V15.8333ZM11.6667 2.5V4.16667H14.6583L6.46667 12.3583L7.64167 13.5333L15.8333 5.34167V8.33333H17.5V2.5H11.6667Z",
                  fill: color
                }));
}

var OpenInNew = {
  make: Icons$OpenInNew
};

function Icons$AddLink(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M6.66669 9.16665H13.3334V10.8333H6.66669V9.16665ZM16.75 9.99998H18.3334C18.3334 7.69998 16.4667 5.83331 14.1667 5.83331H10.8334V7.41665H14.1667C15.5917 7.41665 16.75 8.57498 16.75 9.99998ZM3.25002 9.99998C3.25002 8.57498 4.40835 7.41665 5.83335 7.41665H9.16669V5.83331H5.83335C3.53335 5.83331 1.66669 7.69998 1.66669 9.99998C1.66669 12.3 3.53335 14.1666 5.83335 14.1666H9.16669V12.5833H5.83335C4.40835 12.5833 3.25002 11.425 3.25002 9.99998ZM15.8334 9.99998H14.1667V12.5H11.6667V14.1666H14.1667V16.6666H15.8334V14.1666H18.3334V12.5H15.8334V9.99998Z",
                  fill: color
                }));
}

var AddLink = {
  make: Icons$AddLink
};

function Icons$Mediation(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M18.3333 10L15 13.3334L13.825 12.1584L15.1416 10.8334H10.7833C10.5 13.4167 8.89996 15.6 6.66663 16.7084C6.63329 18.075 5.53329 19.1667 4.16663 19.1667C2.78329 19.1667 1.66663 18.05 1.66663 16.6667C1.66663 15.2834 2.78329 14.1667 4.16663 14.1667C4.95829 14.1667 5.64996 14.5417 6.10829 15.1167C7.69163 14.2584 8.82496 12.6917 9.09163 10.8334H6.50829C6.16663 11.8 5.24996 12.5 4.16663 12.5C2.78329 12.5 1.66663 11.3834 1.66663 10C1.66663 8.61671 2.78329 7.50004 4.16663 7.50004C5.24996 7.50004 6.16663 8.20004 6.51663 9.16671H9.09996C8.83329 7.30837 7.69163 5.75004 6.10829 4.88337C5.64996 5.45837 4.95829 5.83337 4.16663 5.83337C2.78329 5.83337 1.66663 4.71671 1.66663 3.33337C1.66663 1.95004 2.78329 0.833374 4.16663 0.833374C5.53329 0.833374 6.63329 1.92504 6.65829 3.29171C8.89163 4.40004 10.4916 6.58337 10.775 9.16671H15.1333L13.8166 7.84171L15 6.66671L18.3333 10Z",
                  fill: color
                }));
}

var Mediation = {
  make: Icons$Mediation
};

function Icons$ContentCopy(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M13.3334 0.833374H3.33335C2.41669 0.833374 1.66669 1.58337 1.66669 2.50004V14.1667H3.33335V2.50004H13.3334V0.833374ZM15.8334 4.16671H6.66669C5.75002 4.16671 5.00002 4.91671 5.00002 5.83337V17.5C5.00002 18.4167 5.75002 19.1667 6.66669 19.1667H15.8334C16.75 19.1667 17.5 18.4167 17.5 17.5V5.83337C17.5 4.91671 16.75 4.16671 15.8334 4.16671ZM15.8334 17.5H6.66669V5.83337H15.8334V17.5Z",
                  fill: color
                }));
}

var ContentCopy = {
  make: Icons$ContentCopy
};

function Icons$Login(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M9.16669 5.83333L8.00002 7L10.1667 9.16667H1.66669V10.8333H10.1667L8.00002 13L9.16669 14.1667L13.3334 10L9.16669 5.83333ZM16.6667 15.8333H10V17.5H16.6667C17.5834 17.5 18.3334 16.75 18.3334 15.8333V4.16667C18.3334 3.25 17.5834 2.5 16.6667 2.5H10V4.16667H16.6667V15.8333Z",
                  fill: color
                }));
}

var Login = {
  make: Icons$Login
};

function Icons$Remote(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M12.4999 7.5H7.49993C7.0416 7.5 6.6666 7.875 6.6666 8.33333V18.3333C6.6666 18.7917 7.0416 19.1667 7.49993 19.1667H12.4999C12.9583 19.1667 13.3333 18.7917 13.3333 18.3333V8.33333C13.3333 7.875 12.9583 7.5 12.4999 7.5ZM9.99993 12.5C9.08327 12.5 8.33327 11.75 8.33327 10.8333C8.33327 9.91667 9.08327 9.16667 9.99993 9.16667C10.9166 9.16667 11.6666 9.91667 11.6666 10.8333C11.6666 11.75 10.9166 12.5 9.99993 12.5ZM5.87493 5.04167L7.04993 6.21667C7.80827 5.46667 8.84993 5 9.99993 5C11.1499 5 12.1916 5.46667 12.9499 6.21667L14.1249 5.04167C13.0666 3.98333 11.6083 3.33333 9.99993 3.33333C8.3916 3.33333 6.93327 3.98333 5.87493 5.04167ZM9.99993 0C7.4666 0 5.17493 1.025 3.5166 2.68333L4.6916 3.85833C6.04993 2.50833 7.92493 1.66667 9.99993 1.66667C12.0749 1.66667 13.9499 2.50833 15.2999 3.86667L16.4749 2.69167C14.8249 1.025 12.5333 0 9.99993 0Z",
                  fill: color
                }));
}

var Remote = {
  make: Icons$Remote
};

function Icons$MonoAddBlocks(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "187";
  var height = heightOpt !== undefined ? heightOpt : "187";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 187 187"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M9.51132 152.034C9.05383 155.304 10.5227 153.298 11.7736 152.104C14.0776 149.485 17.7715 147.7 19.7543 145.109C17.1323 143.054 13.9263 144.617 11.7051 146.565C9.62296 147.705 9.77755 149.908 9.51132 152.034ZM29.6316 159.086C29.2428 153.908 26.8221 158.451 24.5253 159.676C20.8098 162.44 17.2344 165.409 13.3523 167.939C12.9381 168.21 12.8344 168.5 13.1371 168.902C13.895 169.696 14.7754 171.842 15.9538 170.408C20.08 166.177 25.4114 163.03 29.6316 159.086ZM12.0093 166.881C16.8574 163.038 21.7385 159.099 26.7398 155.398C28.8773 154.23 28.1439 153.421 27.259 151.337C26.4238 149.586 23.0419 154.061 21.8604 154.612C18.6342 157.412 15.3638 160.269 11.8878 162.748C9.97493 163.58 10.4592 163.909 11.0445 165.44C11.3181 165.956 11.4242 166.624 12.0093 166.881ZM9.3943 158.594C9.47681 163.947 12.314 159.181 14.476 157.843C17.8724 154.679 21.6943 152.051 25.4159 149.29C26.8056 148.258 22.427 145.215 21.5636 146.434C17.613 150.33 11.7375 153.624 9.3943 158.594ZM30.0942 164.678C29.9796 160.286 28.8718 162.496 26.6251 164.488C24.6754 166.016 22.8492 167.683 21.006 169.332C20.1972 170.613 15.6712 172.434 17.545 173.954C20.1593 176.273 24.4398 176.162 27.0927 173.927C29.7461 171.599 29.548 167.877 30.0942 164.678ZM80.208 109.427C81.1456 116.443 79.913 124.546 85.3685 129.896C87.9325 132.994 95.1711 136.501 97.2849 131.35C98.4598 123.275 94.6145 109.685 86.8124 106.036C81.8866 105.655 80.1761 102.986 80.208 109.427ZM77.3861 112.673C77.0941 111.573 78.3969 106.558 76.6961 107.061C71.5755 109.498 66.757 112.506 61.79 115.233C47.2761 123.223 33.0347 131.7 18.9989 140.503C17.5017 141.934 22.6937 142.584 23.5273 143.259C25.674 143.969 27.0432 147.363 29.3882 146.867C29.746 146.757 29.8642 147.312 29.742 147.487C28.3663 148.748 29.9924 150.214 30.2448 151.6C30.4506 152.303 31.1452 152.487 31.5143 152.949C31.7886 153.704 30.8499 154.267 31.4668 155.338C37.0033 176.874 17.4994 180.33 57.855 156.495C114.048 121.877 77.5202 152.696 77.3861 112.673ZM6.39319 151.222C8.98013 143.264 17.2455 139.908 23.5108 135.309C39.6078 125.11 56.2152 115.719 72.9086 106.537C78.0767 102.449 79.9284 102.228 86.4297 103.093C92.2935 103.929 95.2732 110.484 97.5028 115.31C99.4744 121.591 104.232 133.7 95.7023 136.806C94.0898 137.24 92.6958 138.006 91.358 138.965C70.61 152.839 48.8671 165.365 27.1658 177.704C19.7726 181.692 12.5182 174.39 9.22335 168.15C6.24632 162.769 7.24076 156.526 7.16742 150.816C6.87243 151.018 6.81149 151.175 6.39319 151.222Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M71.4335 173.405C59.2172 181.963 59.0171 168.054 66.5969 161.79C67.3686 160.855 72.0579 158.586 71.7041 160.876C69.458 162.782 67.065 164.512 65.6244 167.154C63.2905 171.133 63.8599 175.986 69.1175 171.957C71.7089 169.942 70.325 169.236 72.2572 166.773C75.2558 165.755 74.1603 170.812 74.7875 172.496C74.7778 173.83 77.764 176.216 78.1075 174.208C77.3418 169.433 74.3779 165.336 72.7215 160.845C72.3133 159.591 75.1413 157.864 75.5957 159.675C77.5061 164.525 80.6247 169.175 80.9447 174.479C80.8397 180.325 72.5074 177.375 71.4335 173.405Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M31.482 85.4897C25.6457 86.0022 37.8213 94.6556 39.339 95.8348C41.2452 96.1717 41.1512 86.8861 41.8445 85.0499C41.6144 83.9384 40.561 84.9169 40.2196 85.4515C36.2388 91.6268 36.9246 85.9043 31.482 85.4897ZM29.9799 82.8101C38.5175 83.5627 34.5126 89.3388 39.5497 82.2616C41.4632 79.9341 43.2461 81.1848 44.421 83.4148C44.624 83.9176 43.9761 84.4901 44.6745 85.015C45.2218 85.4265 45.096 86.2102 45.0784 86.8554C44.8463 91.0807 43.6536 95.2231 43.7429 99.4664C43.7877 100.283 43.5875 101.014 42.9141 101.557C40.2133 103.345 39.5621 98.6373 37.5536 97.7572C33.5084 94.8673 28.4334 92.066 26.9324 87.0109C26.391 84.6704 27.5761 82.4462 29.9799 82.8101Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M103.816 85.336C101.535 88.8759 104.868 94.0037 105.386 97.8686C105.614 98.5307 106.28 98.1415 106.61 97.7901C109.657 94.5824 114.534 92.3357 116.416 88.36C114.302 88.4383 112.302 90.0517 110.33 90.7112C109.617 90.8038 109.334 89.9983 108.898 89.5423C106.821 88.5829 106.089 85.9679 103.816 85.336ZM109.806 88.8547C112.244 86.3592 120.844 82.402 120.034 88.8264C116.885 94.5457 110.835 98.0385 106.418 102.741C103.667 106.025 103.147 100.674 102.882 98.6876C102.133 94.2099 99.6581 89.6541 101.045 85.0912C103.425 79.1016 108.15 85.6677 109.806 88.8547Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M25.2111 117.442C25.5049 114.339 24.7186 111.086 24.6039 107.936C24.3582 104.81 21.8011 107.829 21.5553 109.395C21.4732 110.191 20.0967 111.438 19.6013 110.335C17.583 109.187 14.6577 109.041 12.4646 109.902C10.8056 110.518 10.6631 113.194 12.5114 113.615C16.741 114.923 21.0718 115.91 25.2111 117.442ZM14.5808 106.884C15.9984 106.744 19.3541 108.811 20.0903 107.286C20.7 104.941 23.319 101.798 25.8468 103.714C29.0503 107.94 28.0087 114.14 29.097 119.163C29.5797 120.723 28.8964 123.416 26.887 121.915C22.4361 117.789 16.0354 117.785 10.6602 115.615C5.46472 112.979 9.50036 106.044 14.5808 106.884Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M25.1642 72.2061C23.623 66.8395 14.3895 76.8344 17.0816 77.1687C20.025 76.1099 24.1214 75.6904 25.1642 72.2061ZM12.6807 83.162C12.8758 79.2263 13.3717 75.1056 16.2031 72.0892C18.7047 68.5006 24.9334 65.8139 27.2685 71.0067C28.9586 76.6368 21.2404 78.6633 17.1041 79.525C13.2786 80.4105 15.7332 85.6283 14.6398 87.8045C12.8765 87.4376 12.9892 84.6128 12.6807 83.162Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M55.1464 100.755C55.1052 98.9769 56.8597 93.625 58.9519 94.4528C59.3481 95.4464 60.4551 96.2037 60.0233 97.3881C59.6751 99.3186 55.546 105.856 55.1464 100.755Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M41.9611 181.495C41.299 179.234 44.7858 175.625 45.7093 179.036C45.3178 181.342 44.3994 183.534 44.5016 185.926C44.5255 186.665 44.1527 186.791 43.5223 186.484C41.8838 185.442 42.1793 183.18 41.9611 181.495Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M90.1655 175.362C92.3429 176.541 93.3055 179.547 93.9356 181.829C93.2149 184.297 85.903 175.736 90.1655 175.362Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M3.86746 92.579C5.33521 92.7133 12.2742 94.6597 9.86896 96.3966C8.15494 95.9531 -1.74091 94.6027 3.86746 92.579Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M42.6536 111.788C42.005 114.18 38.1898 110.485 37.3185 109.506C36.3629 105.195 42.6608 109.643 42.6536 111.788Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M6.86105 131.364C7.44887 132.944 1.00156 134.693 0.0303125 134.258C-0.520296 132.541 6.60939 129.045 6.86105 131.364Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M132.522 2.56288C111.806 4.71468 91.0132 2.44329 70.2601 4.66201C64.109 6.12643 25.0029 8.63287 30.0566 17.7304C35.9943 22.1253 47.029 13.0294 50.7676 15.8306C52.1979 18.7202 42.3915 22.2955 40.4103 24.4291C36.3128 27.2002 29.9673 34.9544 39.8688 32.9097C45.6373 31.762 49.6263 27.6554 54.3188 24.5934C59.4385 24.9612 53.9848 29.997 51.9135 31.1099C49.782 32.5109 48.5151 34.5072 47.6313 36.8108C45.6564 40.982 46.1634 48.2388 52.2928 44.1217C56.6263 40.325 58.703 34.8005 61.6134 29.9555C63.7254 25.6129 81.1198 24.1652 86.3061 23.0626C88.2384 22.8949 90.092 23.3884 92.0107 22.6072C93.4367 21.7207 95.2413 22.354 96.8033 22.1875C102.23 20.2821 108.264 20.9701 113.941 20.2102C119.525 19.9118 116.257 22.9592 115.972 26.11C115.568 32.5547 113.723 40.394 118.504 45.6429C124.177 54.833 135.168 59.8003 145.818 59.5995C149.244 59.5225 152.738 59.5605 155.985 58.2906C157.409 57.9484 159.8 56.6589 160.611 58.4656C160.654 61.0305 153.744 61.2133 151.74 61.7162C135.556 64.2094 113.066 56.0291 111.354 37.7118C111.736 19.2762 121.789 23.345 91.2527 26.3405C82.4347 26.8736 73.9545 29.6042 65.4345 31.7593C61.809 33.8101 60.9571 39.0578 58.0657 42.0397C54.8213 46.3402 45.7081 51.7875 43.7629 43.6723C42.8623 41.58 45.7662 35.4579 44.3199 35.2937C39.6169 37.6797 27.836 37.8997 31.8833 29.8225C33.0614 27.4869 34.7739 25.5813 36.5897 23.7405C37.0411 23.283 37.8907 23.056 37.7075 22.1408C28.2508 23.1137 20.6062 17.5922 30.5533 10.1105C36.2183 6.28506 43.1353 5.75981 49.6495 4.34207C68.8966 1.08359 88.3178 -0.37876 107.861 0.0834916C116.036 1.57765 124.557 0.071512 132.522 2.56288Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M118.445 146.69C115.519 145.577 109.515 147.505 109.055 143.225C108.717 139.688 112.113 138.283 114.204 136.302C111.149 135.186 106.553 136.127 104.228 132.922C101.667 128.641 106.793 123.68 111.173 124.046C120.501 124.721 129.923 125.034 139.264 124.409C153.451 124.132 159.191 121.988 158.949 106.533C159.622 94.1956 158.908 81.9614 157.557 69.6979C157.548 67.2225 157.177 63.4881 159.082 61.8195C161.07 65.9433 160.099 71.5634 161.338 76.165C163.279 87.0686 162.078 98.2513 162.053 109.26C162.707 129.42 144.786 128.416 129.742 128.397C123.485 128.362 117.249 127.74 111.027 127.315C108.958 127.15 104.743 130.523 107.619 132.023C112.869 133.43 118.444 131.963 123.671 133.373C126.317 133.282 129.631 136.113 125.174 136.398C121.447 136.454 113.137 138.623 112.669 142.715C117.185 144.149 122.909 144.409 127.56 142.927C128.574 142.638 129.38 142.956 130.076 143.723C131.656 145.584 128.33 146.096 127.117 146.54C110.269 153.668 121.077 156.099 132.432 152.923C134.259 152.606 134.908 155.166 136.953 154.686C147.793 155.506 158.4 153.109 169.091 152.215C178.126 150.809 177.811 147.507 180.354 139.816C182.707 133.913 181.398 127.475 182.615 121.328C183.598 118.603 180.977 108.489 186.259 110.611C188.05 116.458 185.739 123.359 186.276 129.585C186.602 136.39 184.016 148.101 179.239 153.05C173.549 157.082 165.559 155.15 159.032 156.862C149.66 158.808 140.187 157.127 130.738 157.335C125.605 157.717 113.293 159.081 115.089 150.829C115.664 148.907 117.894 148.457 118.445 146.69Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M148.684 47.6386C161.709 48.6256 167.699 40.9424 166.809 28.9027C163.879 19.2979 152.534 17.5675 143.783 16.8341C132.024 16.3025 127.817 28.2722 129.959 38.1862C131.292 45.8535 142.871 47.5372 148.684 47.6386ZM148.842 50.3146C140.828 49.9432 131.053 48.9991 126.954 41.01C122.274 26.778 130.542 11.2608 146.627 12.652C156.335 14.8041 162.82 14.1987 169.008 23.5993C172.586 29.8082 170.221 38.6386 166.401 44.3122C162.395 49.3545 154.926 50.2764 148.842 50.3146Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M151.539 90.9916C150.916 93.5799 143.381 105.07 142.011 98.4304C142.957 96.6425 150.912 84.6141 151.539 90.9916Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M85.4436 43.304C82.0419 42.9324 79.1556 41.699 76.7975 39.3489C76.225 38.4305 73.2463 36.4568 74.9318 35.6286C77.2291 33.9021 90.6822 42.2568 85.4436 43.304Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M139.832 81.4137C140.543 81.3998 141.726 81.9762 140.73 82.7442C138.422 84.2004 136.677 86.3384 134.481 87.9302C132.687 90.2661 127.476 90.6667 129.547 86.6361C132.477 84.0369 135.772 81.6884 139.832 81.4137Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M106.122 83.2036C103.48 83.3126 100.134 82.219 104.131 80.6176C108.725 80.016 113.428 78.4822 118.042 78.7476C119.012 79.1835 118.04 79.9068 117.757 80.3677C116.03 83.1881 109.13 82.603 106.122 83.2036Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M148.484 75.7602C146.782 75.8816 133.566 74.1162 137.27 71.5265C141.322 71.5823 145.397 72.3128 149.275 73.4697C152.304 74.5735 151.481 76.225 148.484 75.7602Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M92.9891 43.4838C89.0664 43.1307 96.4456 35.2109 98.4618 35.0818C99.8531 34.3314 102.536 34.5355 100.842 36.4141C98.229 38.6236 96.4332 42.7212 92.9891 43.4838Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M94.3746 66.3648C93.8218 71.8211 85.7554 62.9518 87.908 60.7031C92.2751 59.2452 93.7635 63.0247 94.3746 66.3648Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M129.639 102.625C132.073 102.862 140.619 105.403 140.002 108.301C139.93 110.441 124.88 104.084 129.639 102.625Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M117.234 97.0176C106.836 97.1033 120.719 93.1289 123.765 94.171C128.621 95.5821 118.934 97.9595 117.234 97.0176Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M123.319 67.5718C120.791 67.13 118.135 65.6409 116.727 63.46C116.241 61.9216 118.75 62.4023 119.572 62.5339C121.293 62.5804 127.102 66.7675 123.319 67.5718Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M110.194 58.308C108.591 61.3966 105.357 56.458 104.501 54.7985C103.786 53.5248 104.757 51.6996 106.281 52.4796C108.263 53.6882 109.539 56.1482 110.194 58.308Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M130.147 111.344C129.2 112.696 124.76 121.333 123.496 117.113C124.064 115.506 128.672 107.618 130.147 111.344Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M87.1867 53.5504C81.298 52.8526 87.2352 49.4072 89.8219 48.7404C90.9655 48.397 92.1831 50.1737 91.4614 51.0452C90.3879 52.3377 89.0681 53.287 87.1867 53.5504Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M108.576 66.7894C108.52 68.2744 106.861 75.2336 104.91 72.5246C104.134 70.4394 107.726 60.4131 108.576 66.7894Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M69.3878 42.1362C69.0641 44.6335 66.162 44.8189 64.4354 46C62.4065 46.0638 67.9662 39.4856 69.3878 42.1362Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M113.418 114.573C112.217 115.15 111.061 112.97 110.046 112.361C107.618 108.066 113.732 112.41 113.418 114.573Z",
                  fill: color,
                  fillRule: "evenodd"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M142.312 31.2143C142 38.4765 154.889 34.761 149.664 29.4625C147.234 28.0673 141.987 26.872 142.312 31.2143ZM139.517 32.0838C138.774 20.2546 157.096 22.3142 154.079 33.0738C151.475 38.7143 139.995 39.2203 139.517 32.0838Z",
                  fill: color,
                  fillRule: "evenodd"
                }));
}

var MonoAddBlocks = {
  make: Icons$MonoAddBlocks
};

function Icons$Warning(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 1000 1000"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M806.9 947.4H193.1c-76.2 0-134.4-28.2-163.9-79.3S4.4 752.5 42.4 686.5l306.9-531.6C387.5 88.9 441 52.6 500 52.6c59 0 112.5 36.3 150.7 102.3l306.9 531.6c38.1 66 42.8 130.5 13.3 181.6-29.6 51.1-87.8 79.3-164 79.3zM500 142.1c-25.3 0-52 21-73.1 57.6L120 731.2c-21.1 36.6-26 70.2-13.3 92.1 12.7 22 44.2 34.5 86.4 34.5h613.8c42.2 0 73.7-12.6 86.4-34.5 12.7-21.9 7.8-55.5-13.3-92.1L573.1 199.7c-21.1-36.6-47.8-57.6-73.1-57.6z",
                  fill: color
                }), React.createElement("path", {
                  d: "M491.9 812.9c-29.8 0-51.4-22.6-51.4-53.8 0-31 22.4-54.3 52-54.3 29.8 0 51.4 22.9 51.4 54.3 0 31.2-21.9 53.8-52 53.8zm-34.3-139.1l-11.1-330.9h91.8l-11.1 330.9h-69.6z",
                  fill: color
                }));
}

var Warning = {
  make: Icons$Warning
};

function Icons$Visibility(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M9.99992 3.75C5.83325 3.75 2.27492 6.34167 0.833252 10C2.27492 13.6583 5.83325 16.25 9.99992 16.25C14.1666 16.25 17.7249 13.6583 19.1666 10C17.7249 6.34167 14.1666 3.75 9.99992 3.75ZM9.99992 14.1667C7.69992 14.1667 5.83325 12.3 5.83325 10C5.83325 7.7 7.69992 5.83333 9.99992 5.83333C12.2999 5.83333 14.1666 7.7 14.1666 10C14.1666 12.3 12.2999 14.1667 9.99992 14.1667ZM9.99992 7.5C8.61658 7.5 7.49992 8.61667 7.49992 10C7.49992 11.3833 8.61658 12.5 9.99992 12.5C11.3833 12.5 12.4999 11.3833 12.4999 10C12.4999 8.61667 11.3833 7.5 9.99992 7.5Z",
                  fill: color
                }));
}

var Visibility = {
  make: Icons$Visibility
};

function Icons$EditPencil(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M15.3417 4.83333L14.3333 3.82499C13.6833 3.17499 12.625 3.17499 11.975 3.82499L9.74167 6.05833L2.5 13.3V16.6667H5.86667L13.15 9.38333L15.3417 7.19166C16 6.54166 16 5.48333 15.3417 4.83333ZM5.175 15H4.16667V13.9917L11.3833 6.77499L12.3917 7.78333L5.175 15ZM9.16667 16.6667L12.5 13.3333H17.5V16.6667H9.16667Z",
                  fill: color
                }));
}

var EditPencil = {
  make: Icons$EditPencil
};

function Icons$Plus(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    fill: "none",
    viewBox: "0 0 20 20"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("path", {
                  d: "M14 8H8V14H6V8H0V6H6V0H8V6H14V8Z",
                  fill: color
                }));
}

var Plus = {
  make: Icons$Plus
};

function Icons$Help(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var tmp = {
    height: height,
    width: width,
    enableBackground: "new 0 0 512 512",
    fill: "none",
    viewBox: "0 0 512 512"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("svg", tmp, React.createElement("circle", {
                  cx: "256",
                  cy: "378.5",
                  fill: color,
                  r: "25"
                }), React.createElement("path", {
                  d: "M256 0C114.516 0 0 114.497 0 256c0 141.484 114.497 256 256 256 141.484 0 256-114.497 256-256C512 114.516 397.503 0 256 0zm0 472c-119.377 0-216-96.607-216-216 0-119.377 96.607-216 216-216 119.377 0 216 96.607 216 216 0 119.377-96.607 216-216 216z",
                  fill: color
                }), React.createElement("path", {
                  d: "M256 128.5c-44.112 0-80 35.888-80 80 0 11.046 8.954 20 20 20s20-8.954 20-20c0-22.056 17.944-40 40-40s40 17.944 40 40-17.944 40-40 40c-11.046 0-20 8.954-20 20v50c0 11.046 8.954 20 20 20s20-8.954 20-20v-32.531c34.466-8.903 60-40.26 60-77.469 0-44.112-35.888-80-80-80z",
                  fill: color
                }));
}

var Help = {
  make: Icons$Help
};

var strokes = {
  strokePrecursor: "M35.7,45.3V95 M60.5,84.4C82,78.6,94.8,56.5,89,34.9C83.2,13.4,61.1,0.6,39.5,6.4S5.2,34.3,11,55.9",
  strokeDownload: "M5,95 h90 M5,85v10 M95,85v10 M50,5v70 M50,75l30-30 M20,45l30,30",
  strokeCheck: "M35,80 L5,50 M95,20L35,80",
  strokeTimes: "M82.5,82.5l-65-65 M82.5,17.5l-65,65",
  strokePlus: "M50,72.5v-45 M27.5,50h45",
  strokeMinus: "M27.5,50h45",
  strokeCursor: "M23.3,80.4V5 l53.3,53.3c0,0-21.5,0-21.5,0s12.4,29.8,12.4,29.8L50.9,95c0,0-12.4-29.8-12.4-29.8S23.3,80.4,23.3,80.4z",
  strokeBorderCircle: "M95,50c0,24.9-20.1,45-45,45S5,74.9,5,50S25.1,5,50,5 S95,25.1,95,50z",
  strokeBorderSquare: "M95,95H5V5h90V95z",
  strokeRectangle: "M87.5,87.5h-75v-75h75V87.5z M20,5H5v15h15V5z M95,5H80v15h15V5z M20,80H5v15h15V80z M95,80H80v15h15V80z",
  strokeLine: "M95,20H80V5h15V20z M20,80H5v15h15V80z M87.5,12.5l-75,75",
  strokeText: "M65.9,92.4H34.1H50 V7.6 M95,21.4c0,0-7.9-13.8-7.9-13.8c0,0-74.1,0-74.1,0L5,21.4",
  strokePencil: "M89.5,10.5c3.9,3.9,6.3,7.8,5.3,8.8L24.3,89.8L5,95l5.2-19.3L80.7,5.2C81.7,4.2,85.6,6.6,89.5,10.5z M22.5,88.1L11.9,77.5 M81.3,8.1c0.9,1.7,2.6,3.8,4.7,5.9c2.1,2.1,4.2,3.8,5.9,4.7 M70.3,19.1c0.9,1.7,2.6,3.8,4.7,5.9c2.1,2.1,4.2,3.8,5.9,4.7 M68.3,21.1c0.9,1.7,2.6,3.8,4.7,5.9c2.1,2.1,4.2,3.8,5.9,4.7",
  strokeEllipse: "M57.5,5h-15v15h15V5z M95,42.5H80v15h15V42.5z M20,42.5H5v15h15V42.5z M57.5,80h-15v15h15V80z M87.5,50c0,20.7-16.8,37.5-37.5,37.5 S12.5,70.7,12.5,50S29.3,12.5,50,12.5S87.5,29.3,87.5,50z",
  strokeUser: "M75,30 c0,13.8-11.2,25-25,25S25,43.8,25,30S36.2,5,50,5S75,16.2,75,30z M24.1,49.6C15.5,56.9,10,67.8,10,80c0,8.3,17.9,15,40,15 s40-6.7,40-15c0-12.2-5.5-23.1-14.1-30.4",
  strokeUsers: "M59.2,40.8c0,11.5-9.3,20.8-20.8,20.8s-20.8-9.3-20.8-20.8S26.8,20,38.3,20S59.2,29.3,59.2,40.8z M16.7,57.1 C9.5,63.3,5,72.3,5,82.5C5,89.4,19.9,95,38.3,95s33.3-5.6,33.3-12.5c0-10.2-4.5-19.2-11.7-25.4 M64.8,46.4 c10-1.5,17.7-10.1,17.7-20.6C82.5,14.3,73.2,5,61.7,5c-7.3,0-13.7,3.8-17.5,9.5 M77.4,78.5c10.5-2.1,17.6-6.3,17.6-11 c0-10.2-4.5-19.2-11.7-25.4",
  strokeDot: "M49.5,50a0.5,0.5 0 1,0 1,0a0.5,0.5 0 1,0 -1,0",
  strokeChats: "M60.8,63.2c-0.2,12-12.9,21.5-28.3,21.2 c-3.5-0.1-6.8-0.6-9.8-1.6L8.5,88.8c0,0,4.8-9.7,0.4-15.3c-2.6-3.4-4-7.3-3.9-11.4c0.2-12,12.9-21.5,28.3-21.2 C48.7,41.2,61,51.2,60.8,63.2z M68.5,73.9L89.7,83c0,0-7.2-14.5-0.6-22.9c3.8-5,6-10.9,5.9-17.2c-0.4-18-19.4-32.2-42.5-31.7 c-19.1,0.4-35,10.7-39.8,24.4",
  strokeCrosshair: "M50,5v90 M5,50h90",
  strokeIbeam: "M50,10v80 M41.3,95h-10 M68.7,95h-10 M45,50h10 M50,90 l-8.7,5 M50,90l8.7,5 M58.7,5h10 M31.3,5h10 M58.7,5L50,10 M41.3,5l8.7,5",
  strokeBlog: "M85,32.5H35 M35,50h50 M35,67.5h50 M25,85h60 c5.5,0,10-4.5,10-10V15H25v60c0,5.5-4.5,10-10,10S5,80.5,5,75V35h15",
  strokeClock: "M95,50c0,24.9-20.1,45-45,45S5,74.9,5,50S25.1,5,50,5 S95,25.1,95,50z M71.2,71.2C71.2,71.2,50,50,50,50V20",
  strokeStar: "M50,7.2l13.9,28.2L95,39.9L72.5,61.8l5.3,31L50,78.2 L22.2,92.8l5.3-31L5,39.9l31.1-4.5L50,7.2z",
  strokeDelete: "M35,80L5,50c0,0,30-30,30-30s60,0,60,0v60 C95,80,35,80,35,80z M45,35l30,30 M75,35L45,65",
  strokeShift: "M5,52L50,7l45,45H70.5V93H29.5V52H5z",
  strokeOption: "M95,15H65 M95,85H75L35,15H5",
  strokeControl: "M86,41L50,5L14,41",
  strokeCommand: "M65,35v30H35V35H65z M20,5C11.7,5,5,11.7,5,20 c0,8.3,6.7,15,15,15h15V20C35,11.7,28.3,5,20,5z M95,20c0-8.3-6.7-15-15-15c-8.3,0-15,6.7-15,15v15h15C88.3,35,95,28.3,95,20z M5,80c0,8.3,6.7,15,15,15c8.3,0,15-6.7,15-15V65H20C11.7,65,5,71.7,5,80z M80,65H65v15c0,8.3,6.7,15,15,15c8.3,0,15-6.7,15-15 C95,71.7,88.3,65,80,65z",
  strokeEsc: "M95,46.6c-3.2-3.2-7.4-4.8-11.7-4.8 c-9.1,0-16.5,7.4-16.5,16.5s7.4,16.5,16.5,16.5c4.2,0,8.4-1.6,11.7-4.8 M40.4,72.3c1.6,1.6,3.7,2.4,5.8,2.4c4.6,0,8.2-3.7,8.2-8.2 s-3.7-8.2-8.2-8.2S38,54.6,38,50s3.7-8.2,8.2-8.2c2.1,0,4.2,0.8,5.8,2.4 M29.7,74.7H5c0,0,0-49.5,0-49.5h24.7 M5,50h18.6",
  strokeSpace: "M95,65v30H5V65",
  strokeClick1: "M29.2,30h-24",
  strokeClick2: "M31.8,23.6L19.1,10.9",
  strokeClick3: "M38.2,21V9",
  strokePrivate: "M72.5,50V37.5 C72.5,25.1,62.4,15,50,15S27.5,25.1,27.5,37.5V50",
  strokePrivateBottom: "M80,95H20V50h60V95z",
  strokePublic: "M65,95H5V50h60V95z M95,50V27.5 C95,15.1,84.9,5,72.5,5S50,15.1,50,27.5V50",
  strokeMouse: "M58,5h17c2.8,0,5,2.2,5,5v55c0,16.6-13.4,30-30,30 S20,81.6,20,65V10c0-2.8,2.2-5,5-5h20c2.8,0,5,2.2,5,5c0,0,0,25,0,25",
  strokeGlobe: "M95,50c0,24.9-20.1,45-45,45S5,74.9,5,50S25.1,5,50,5 S95,25.1,95,50z M16.5,20c8.2,4.6,20.2,7.5,33.5,7.5s25.3-2.9,33.5-7.5 M83.5,80c-8.2-4.6-20.2-7.5-33.5-7.5S24.7,75.4,16.5,80 M50,5C37.6,5,27.5,25.1,27.5,50S37.6,95,50,95s22.5-20.1,22.5-45S62.4,5,50,5z M5,50h90 M50,95V5",
  strokeNewdoc: "M58,80V50 M43,65h30 M12,77l0-52L32,5l34,0v20 M58,35 c-16.6,0-30,13.4-30,30s13.4,30,30,30s30-13.4,30-30S74.6,35,58,35z M12,25h20V5",
  strokeDoc: "M84,94H16V6h68V94z",
  strokeDocs: "M87.5,95h-51V29h51V95z M63.5,29V5h-51v66h24",
  strokeDocsTeam: "M63.5,95h-51V29h51V95z M63.5,71h24V5h-51v24",
  strokeLogin: "M35,82.1V70 M5,43.6h42.9 M30.7,60.7l17.1-17.1 L30.7,26.4 M35,17.1V5h60c0,0,0,77.1,0,77.1L52.1,95V17.9L88.3,7",
  strokeLogout: "M5,82.1 M65,55v27.1 M95,43.6H52.1 M77.9,60.7L95,43.6 L77.9,26.4 M65,32.1V5H5c0,0,0,77.1,0,77.1L47.9,95V17.9L11.5,7",
  strokeInfo: "M50,40v35 M59,66l-9,9 M41,49l9-9 M50,25 c-1.4,0-2.5,1.1-2.5,2.5S48.6,30,50,30s2.5-1.1,2.5-2.5S51.4,25,50,25z M95,50c0,24.9-20.1,45-45,45S5,74.9,5,50S25.1,5,50,5 S95,25.1,95,50z",
  strokeCog: "M94.8,54.3c-0.3,2.1-1.9,3.8-3.9,4c-2.5,0.3-7.7,0.9-7.7,0.9c-2.3,0.5-3.9,2.5-3.9,4.9c0,1,0.3,2,0.8,2.7c0,0.1,3.1,4.1,4.7,6.2 c1.3,1.6,1.2,3.9-0.1,5.5c-1.8,2.3-3.8,4.3-6.1,6.1c-0.8,0.7-1.8,1-2.8,1c-0.9,0-2-0.3-2.7-0.9L67,80.1c-0.7-0.6-1.8-0.8-2.8-0.8 c-2.4,0-4.4,1.8-4.9,4.1l-0.9,7.5c-0.3,2.1-2,3.7-4,3.9C52.9,94.9,51.4,95,50,95c-1.4,0-2.9-0.1-4.3-0.2c-2.1-0.3-3.7-1.9-4-3.9 c0,0-0.9-7.4-0.9-7.5c-0.4-2.3-2.4-4.1-4.9-4.1c-1.1,0-2.2,0.4-3,0.9L27,84.8c-0.7,0.7-1.8,0.9-2.7,0.9c-1,0-2-0.4-2.8-1 c-2.3-1.8-4.3-3.8-6.1-6.1c-1.3-1.6-1.4-3.9-0.1-5.5l4.5-5.9c0.7-0.8,1-1.9,1-3c0-2.5-1.9-4.6-4.3-4.9l-7.3-0.9 c-2.1-0.3-3.7-2-3.9-4c-0.3-2.8-0.3-5.7,0-8.6c0.2-2.1,1.9-3.7,3.9-4l7.3-0.9c2.4-0.4,4.3-2.4,4.3-5c0-1-0.4-2.1-1-2.9 c0,0-3-3.9-4.5-5.9c-1.3-1.6-1.3-3.9,0.1-5.5c1.8-2.3,3.8-4.3,6.1-6.1c1.6-1.3,3.9-1.4,5.5-0.1l5.9,4.6c0.8,0.6,1.9,0.9,3,0.9 c2.4,0,4.5-1.8,4.9-4.1l0.9-7.5c0.3-2.1,2-3.7,4-3.9c2.8-0.3,5.7-0.3,8.6,0c2.1,0.3,3.7,1.9,4,3.9l0.9,7.5c0.5,2.3,2.4,4.1,4.9,4.1 c1,0,2-0.4,2.8-0.8c0,0,4-3.1,6.1-4.7c1.6-1.3,3.9-1.2,5.5,0.1c2.3,1.8,4.3,3.8,6.1,6.1c1.3,1.6,1.4,3.9,0.1,5.5 c0,0-4.7,6.1-4.7,6.2c-0.6,0.7-0.8,1.7-0.8,2.6c0,2.4,1.7,4.4,3.9,5c0,0,5.2,0.7,7.7,0.9c2.1,0.3,3.7,2,3.9,4 C95.1,48.5,95.1,51.4,94.8,54.3z",
  strokeHome: "M95,95H5 V50L50,5l45,45V95z M80,30V5",
  strokeHash: "M54.7,95L72.2,5 M46.7,5L29.3,95 M20,37h65 M15,67h65",
  strokeTeam: "M61.8,38.2c13,13,13,34,0,47s-34,13-47,0s-13-34,0-47S48.8,25.3,61.8,38.2z M38.2,14.7c-13,13-13,34,0,47s34,13,47,0s13-34,0-47 S51.2,1.8,38.2,14.7z",
  strokeArrowUp: "M50,95V5 M86,41L50,5L14,41",
  strokeArrowDown: "M50,95V5 M14,59l36,36l36-36",
  strokeArrowRight: "M95,50H5 M59,86l36-36L59,14",
  strokeArrowLeft: "M95,50H5 M41,14L5,50l36,36",
  strokeMenuTop: "M5,25h90",
  strokeMenuMid: "M5,50h90",
  strokeMenuBtm: "M5,75h90",
  strokeReadOnly: "M50,25.9c-18.8,0-35.3,9.6-45,24.1 c9.7,14.5,26.2,24.1,45,24.1S85.3,64.5,95,50C85.3,35.5,68.8,25.9,50,25.9z",
  strokeLockTop: "M75,45V30C75,16.2,63.8,5,50,5S25,16.2,25,30v15",
  strokeChat: "M50,5c24.9,0,45,20.1,45,45c0,24.9-20.1,45-45,45H5V50 C5,25.1,25.1,5,50,5z",
  strokeSound: "M50,18.2l0,63.6L33.2,65h-15V35h15L50,18.2z",
  strokeWave1: "M60.6,60.6C63.3,57.9,65,54.1,65,50s-1.7-7.9-4.4-10.6",
  strokeWave2: "M71.2,71.2C76.6,65.8,80,58.3,80,50 c0-8.3-3.4-15.8-8.8-21.2",
  strokeWave3: "M81.8,81.8C90,73.7,95,62.4,95,50 c0-12.4-5-23.7-13.2-31.8",
  strokeMic: "M80,50c0,16.6-13.4,30-30,30S20,66.6,20,50 M50,5 c-8.3,0-15,6.7-15,15v30c0,8.3,6.7,15,15,15c8.3,0,15-6.7,15-15V20C65,11.7,58.3,5,50,5z M50,80v15 M65,95H35",
  strokeSlashForward: "M5,95L95,5",
  strokeSlashBackward: "M5,5l90,90",
  strokeAt: "M70,50c0,11-9,20-20,20s-20-9-20-20s9-20,20-20 S70,39,70,50z M70,25v50 M90.3,70c3-6,4.7-12.8,4.7-20C95,25.1,74.9,5,50,5S5,25.1,5,50c0,24.9,20.1,45,45,45c7.2,0,14-1.7,20-4.7",
  strokeSharing: "M50,5h45c0,0,0,45,0,45 M50,50L95,5 M27.5,5H5v90 c0,0,90,0,90,0V72.5",
  strokeEmail: "M95,35v60H5V35L50,5L95,35z M95,35L5,95 M5,35l90,60",
  strokePhone: "M70,95 H30c-5.5,0-10-4.5-10-10V15c0-5.5,4.5-10,10-10h40c5.5,0,10,4.5,10,10v70C80,90.5,75.5,95,70,95z M50.8,70.1 c-3.4-0.5-6.2,2.4-5.7,5.7c0.3,2.1,2,3.8,4.1,4.1c3.4,0.5,6.2-2.4,5.7-5.7C54.6,72.1,52.9,70.4,50.8,70.1z M65,20H35v35h30V20z",
  strokeActivity: "M92.1,34.1c0,0-31.8,31.8-31.8,31.8L39.1,44.7L17.9,65.9 M5,5v90h90",
  strokeCredit: "M95,80H5V20h90V80z M5,35h90 M15,65h50",
  strokeHeart: "M88.4,50c8.8-8.8,8.8-23,0-31.8s-23-8.8-31.8,0 C52.2,22.6,50,28.3,50,34.1c0-5.8-2.2-11.5-6.6-15.9c-8.8-8.8-23-8.8-31.8,0c-8.8,8.8-8.8,23,0,31.8c0,0,38.4,38.4,38.4,38.4 S88.4,50,88.4,50z",
  strokeFile: "M80,95H20V5h60V95z",
  strokeVertical: "M50,95V5",
  strokeHorizontal: "M5,50h90",
  strokeRequests: "M95,65v30H65 c-16.6,0-30-13.4-30-30c0-16.6,13.4-30,30-30C81.6,35,95,48.4,95,65z M63.3,25C59.2,13.4,48.1,5,35,5C18.4,5,5,18.4,5,35v30h20 M65,80V50 M50,65h30",
  strokeChatTeam: "M35,35c16.6,0,30,13.4,30,30 c0,16.6-13.4,30-30,30H5V65C5,48.4,18.4,35,35,35z M75,65h20V35C95,18.4,81.6,5,65,5c-13.1,0-24.2,8.4-28.3,20",
  fillLogomark: "M43,100H29.5V39H43V100z M94,33.8C90.9,22,83.3,12.2,72.8,6.1C62.2,0,50-1.6,38.2,1.6 C26.5,4.7,16.6,12.3,10.6,22.8C4.5,33.3,2.9,45.6,6,57.4l1.7,6.4l12.7-3.4l-1.7-6.4c-4.6-17.2,5.6-35,22.9-39.6 c8.3-2.2,17.1-1.1,24.6,3.2c7.5,4.3,12.8,11.3,15.1,19.7c4.6,17.2-5.6,35-22.9,39.6L52,78.5l3.4,12.7l6.4-1.7 C86.1,83.1,100.5,58,94,33.8z",
  fillTwitter: "M100,19c-3.7,1.6-7.6,2.7-11.8,3.2c4.2-2.5,7.5-6.6,9-11.4c-4,2.4-8.4,4.1-13,5c-3.7-4-9.1-6.5-15-6.5 c-11.3,0-20.5,9.2-20.5,20.5c0,1.6,0.2,3.2,0.5,4.7c-17.1-0.9-32.2-9-42.3-21.4c-1.8,3-2.8,6.6-2.8,10.3c0,7.1,3.6,13.4,9.1,17.1 c-3.4-0.1-6.5-1-9.3-2.6c0,0.1,0,0.2,0,0.3c0,9.9,7.1,18.2,16.5,20.1c-1.7,0.5-3.5,0.7-5.4,0.7c-1.3,0-2.6-0.1-3.9-0.4 c2.6,8.2,10.2,14.1,19.2,14.2c-7,5.5-15.9,8.8-25.5,8.8c-1.7,0-3.3-0.1-4.9-0.3c9.1,5.8,19.9,9.2,31.4,9.2 c37.7,0,58.4-31.3,58.4-58.4c0-0.9,0-1.8-0.1-2.7C93.8,26.7,97.2,23.1,100,19z",
  fillGoogle: "M53.8,0C35.5,0,25.6,11.6,25.6,24.5c0,9.8,7.1,21,21.6,21h3.7c0,0-1,2.4-1,4.8c0,3.5,1.2,5.4,3.9,8.4 c-25,1.5-35.1,11.6-35.1,22.5c0,9.5,9.1,18.9,28.2,18.9c22.6,0,34.4-12.6,34.4-24.9c0-8.7-4.3-13.5-15.3-21.7 c-3.2-2.5-3.9-4.1-3.9-6c0-2.7,1.6-4.5,2.2-5.1c1-1.1,2.8-2.3,3.5-2.9c3.7-3.1,8.9-7.7,8.9-17c0-6.3-2.6-11.8-8.6-16.9h7.3L80.9,0 L53.8,0L53.8,0z M48.8,4.1c3.3,0,6.1,1.2,9,3.6c3.2,2.9,8.4,10.8,8.4,20.5c0,10.5-8.2,13.4-12.6,13.4c-2.2,0-4.8-0.6-6.9-2.1 C41.8,36.4,37,28,37,17.9C37,8.9,42.4,4.1,48.8,4.1z M56,62.7c1.4,0,2.4,0.1,2.4,0.1s3.3,2.4,5.6,4.1c5.4,4.2,8.7,7.5,8.7,13.2 c0,7.9-7.4,14.1-19.3,14.1c-13.1,0-23.1-6.1-23.1-16C30.4,70,37.2,62.9,56,62.7L56,62.7z",
  fillDribbble: "M50,99.9C22.4,99.9,0,77.5,0,50C0,22.5,22.4,0.1,50,0.1 c27.6,0,50,22.4,50,49.9C100,77.5,77.6,99.9,50,99.9L50,99.9z M92.2,56.8c-1.5-0.5-13.2-4-26.6-1.8c5.6,15.3,7.9,27.8,8.3,30.4 C83.4,79,90.3,68.7,92.2,56.8L92.2,56.8z M66.7,89.3C66,85.6,63.6,72.5,57.6,57c-0.1,0-0.2,0.1-0.3,0.1 c-24.1,8.4-32.7,25.1-33.5,26.6c7.2,5.6,16.3,9,26.2,9C55.9,92.7,61.6,91.5,66.7,89.3L66.7,89.3z M18.3,78.6 c1-1.7,12.7-21,34.7-28.1c0.6-0.2,1.1-0.3,1.7-0.5c-1.1-2.4-2.2-4.8-3.5-7.2c-21.3,6.4-42,6.1-43.9,6.1c0,0.4,0,0.9,0,1.3 C7.3,61,11.5,71,18.3,78.6L18.3,78.6z M8.2,41.3c1.9,0,19.5,0.1,39.5-5.2C40.6,23.6,33,13,31.8,11.5C19.9,17.1,11,28.1,8.2,41.3 L8.2,41.3z M40,8.6c1.2,1.6,8.9,12.1,15.9,25c15.2-5.7,21.6-14.3,22.4-15.4C70.8,11.5,60.9,7.4,50,7.4C46.6,7.4,43.2,7.8,40,8.6 L40,8.6z M83.1,23.1c-0.9,1.2-8.1,10.4-23.8,16.8c1,2,1.9,4.1,2.8,6.2c0.3,0.7,0.6,1.5,0.9,2.2c14.2-1.8,28.3,1.1,29.7,1.4 C92.6,39.6,89,30.4,83.1,23.1L83.1,23.1z",
  fillGithub: "M50,0C22.4,0,0,22.4,0,50c0,22.1,14.3,40.8,34.2,47.4 c2.5,0.5,3.4-1.1,3.4-2.4c0-1.2,0-4.3-0.1-8.5c-13.9,3-16.8-6.7-16.8-6.7c-2.3-5.8-5.6-7.3-5.6-7.3c-4.5-3.1,0.3-3,0.3-3 c5,0.4,7.7,5.2,7.7,5.2c4.5,7.6,11.7,5.4,14.6,4.2c0.5-3.2,1.7-5.4,3.2-6.7c-11.1-1.3-22.8-5.6-22.8-24.7c0-5.5,1.9-9.9,5.1-13.4 c-0.5-1.3-2.2-6.3,0.5-13.2c0,0,4.2-1.3,13.7,5.1c4-1.1,8.3-1.7,12.5-1.7c4.2,0,8.5,0.6,12.5,1.7c9.5-6.5,13.7-5.1,13.7-5.1 c2.7,6.9,1,12,0.5,13.2c3.2,3.5,5.1,8,5.1,13.4c0,19.2-11.7,23.4-22.8,24.7c1.8,1.5,3.4,4.6,3.4,9.3c0,6.7-0.1,12.1-0.1,13.7 c0,1.3,0.9,2.9,3.4,2.4C85.7,90.8,100,72.1,100,50C100,22.4,77.6,0,50,0z",
  fillSlack: "M99.7,52.8l-0.1-0.4c-1.2-3.5-4.5-5.8-8.3-5.7c-0.9,0-1.9,0.2-2.8,0.5l-9.8,3.3l-6.3-18.8l0,0l0,0 c9.3-3.2,9.4-3.2,9.4-3.2c3.9-1.3,7.2-5.5,5.9-10.1L87.6,18c-1.2-3.5-4.4-5.8-8.3-5.8c-0.9,0-1.7,0.1-2.6,0.4L67,15.8l-3.2-9.6 c-0.7-2.2-2.3-4-4.4-5c-1.2-0.6-2.6-0.9-3.9-0.9c-0.9,0-1.8,0.2-2.7,0.5c-4.4,1.5-6.9,6.2-5.6,10.6l0.1,0.4l3.2,9.6l-18.6,6.2 L28.7,18c-1.2-3.6-4.5-6-8.3-5.9c-0.9,0-1.8,0.2-2.7,0.5c-4.4,1.5-6.9,6.2-5.6,10.6c0,0.1,0.1,0.3,0.1,0.4l3.2,9.5l-9.4,3.2 c-4.4,1.5-6.9,6.1-5.6,10.6c0,0.1,0.1,0.3,0.1,0.4c1.2,3.5,4.3,5.7,8.1,5.7l0,0c1,0,1.9-0.2,2.9-0.5c3.3-1.1,6.4-2.2,9.4-3.2l0,0v0 l0,0l6.3,18.7l-9.4,3.2c-4.4,1.5-6.9,6.2-5.6,10.7c0,0.1,0.1,0.3,0.1,0.4c1.2,3.4,4.3,5.6,8.1,5.6v0c1,0,2-0.2,3-0.5l9.2-3.1 l3.3,9.7c1.2,3.6,4.5,6,8.3,5.9c0.9,0,1.8-0.2,2.7-0.5c4.4-1.5,6.9-6.2,5.6-10.6c0-0.1-0.1-0.3-0.1-0.4L49,78.4l18.6-6.4l3.3,9.9 c1.2,3.6,4.5,6,8.3,5.9l0,0c0.9,0,1.8-0.2,2.7-0.5c4.4-1.5,6.9-6.2,5.5-10.8l-0.1-0.2l-3.4-10l10.3-3.5c0,0,3.2-1.4,4.2-3 C100,57.8,100.4,55.1,99.7,52.8z M43.6,62.3l-6.3-18.7c7.3-2.5,13.5-4.6,18.6-6.3L62.2,56L43.6,62.3z",
  fillCognitect: "M75.6,59.9L35.2,74.6V25.4l40.4,14.7V4.2c0-0.4-0.2-0.7-0.6-0.8l-9.1-3.3C65.7,0,65.4,0,65.1,0.2 c-0.2,0.2-0.4,0.4-0.4,0.7v23.7L25.6,10.3c-0.3-0.1-0.6-0.1-0.8,0.1c-0.2,0.2-0.4,0.4-0.4,0.7v77.7c0,0.3,0.1,0.5,0.4,0.7 c0.2,0.2,0.5,0.2,0.8,0.1l39.2-14.3v23.7c0,0.3,0.1,0.5,0.4,0.7c0.1,0.1,0.3,0.2,0.5,0.2c0.1,0,0.2,0,0.3-0.1l9.1-3.3 c0.3-0.1,0.6-0.5,0.6-0.8L75.6,59.9L75.6,59.9z",
  fillCognician: "M67.3,39.6c0.1-0.2,0.8-0.9,1.6-0.9H69c0.5,0.1,0.8,0.2,1,0.7c0.1,0.1,0.1,0.5,0.1,0.6 c-0.2,0.4-0.4,0.8-1.1,1.2c-0.3,0.2-1.7,0.8-2.4,0.9l-0.4,0.1C66.5,41.3,66.9,40.3,67.3,39.6 M39.4,42.2c-0.7-0.1-2.2-0.8-2.4-0.9 c-0.7-0.5-0.9-0.9-1.1-1.2c-0.1-0.1,0-0.5,0.1-0.6c0.2-0.5,0.5-0.6,1-0.7H37c0.8,0,1.5,0.7,1.6,0.9c0.5,0.7,0.8,1.7,1.1,2.7 L39.4,42.2L39.4,42.2z M85.4,71.6C80.6,78.1,74.2,82,66.9,83.3c-1.2,0.2-2.9,0.6-4.6,0.2c-3.2-0.7-3.4-4.2-3.3-4.7l6.1-31.6 c0.5-0.1,0.9-0.2,1.3-0.3l1-0.2c1.5-0.3,3.6-1.3,4.3-1.8c1.5-1.2,2.2-2.3,2.6-3.1c0.8-1.8,0.3-3.6-0.1-4.5c-0.9-2-2.7-3.2-4.9-3.3 c-2.6-0.2-4.9,1.5-5.9,3c-1.1,1.8-1.8,4.2-2.2,6c-0.8,0.1-1.6,0.2-2.3,0.3c1.9-4.2,1-7-0.1-8.7c-1-1.6-3-3-5.7-2.9 c-2.8-0.1-4.7,1.3-5.7,2.9c-1.1,1.7-1.9,4.6-0.1,8.7c-0.8-0.1-1.6-0.2-2.3-0.3c-0.5-1.9-1.2-4.3-2.2-6c-1-1.6-3.2-3.2-5.9-3 c-2.2,0.1-3.9,1.3-4.9,3.3c-0.4,0.9-0.9,2.8-0.1,4.5c0.4,0.9,1,2,2.6,3.1c0.7,0.5,2.8,1.5,4.3,1.8l1,0.2c0.4,0.1,0.9,0.2,1.3,0.3 l6,32.5c0,2.1,1.2,4.8-5.9,6.8c-8.8,2.1-17.6,4.2-26.4,6.3c2.5-1.9,5-3.9,7.4-5.9c1.3-1.1,2.8-2.1,4.1-3.2c1.8-1.3,2.2-2.2,1.3-3.3 c-0.1-0.5-0.7-1.1-1.6-1.9c-4.6-3.5-8.3-7.7-11.1-12.5c-1.5-2.8-2.8-5.7-3.6-9C4.8,33.6,20.6,9.1,44.7,5.5 c18.2-2.7,35.5,6.1,43.7,21.4c1.8,3.5,3.2,7.3,4,11.4C94.4,50.2,92.8,61.6,85.4,71.6 M52.4,36.6c0.2-0.1,0.4-0.1,0.6-0.1 c0.2,0,0.4,0.1,0.6,0.1c0.6,0.2,1.8,0.9,1.5,3c0,0-0.3,1.4-1.6,2.5c-0.1,0.1-0.2,0.2-0.4,0.3c-0.2-0.1-0.4-0.2-0.4-0.3 c-1.3-1.1-1.6-2.5-1.6-2.5C50.6,37.5,51.9,36.8,52.4,36.6 M98.3,43.5c-0.5-6.8-2.2-13-5-18.4C89,16.4,81.8,9.5,72,4.7 c-13.2-6.4-26.7-6-40.2-0.2C6.5,15.4-2.4,44.3,9.2,66.6c2.5,5.2,6.1,9.9,10.9,14.1c0.3,0.2,0.6,0.5,0.8,0.8 c-2.8,2.2-5.5,4.3-8.1,6.4c-3.4,2.6-6.8,5.3-10.2,8c-0.9,0.7-1.3,1.5-0.8,2.9c0.8,1.9,3.4,1.3,3.6,1.2c9.5-2.3,19.1-4.6,28.6-6.9 c3.3-0.8,6.6-1.6,9.8-2.6c0,0,2.3-0.6,3.9-1.8c2.2-1.6,4.3-4.2,3.9-8.1l-6-32.4c1.5,0.2,13.1,0.2,14.5,0l-5.9,30.5 c-0.5,6.7,5.9,9.6,7.7,9.8l0.2,0.1c2.3,0.3,6.1-0.5,9.3-1.5c8.4-2.7,15.3-7.4,20.1-14.8C97.3,63.3,99.1,53.6,98.3,43.5",
  fillScrollNorth: "M35,27.5l15-15l15,15",
  fillScrollSouth: "M65,72.5l-15,15l-15-15H65z",
  fillClickCursor: "M35,66.9V25l29.6,29.6h-12l6.9,16.6L50.3,75l-6.9-16.6L35,66.9z",
  fillDot: "M57.5,50c0,4.1-3.4,7.5-7.5,7.5s-7.5-3.4-7.5-7.5s3.4-7.5,7.5-7.5S57.5,45.9,57.5,50z",
  fillEllipsis: "M59,50c0,5-4,9-9,9s-9-4-9-9s4-9,9-9S59,45,59,50z M14,41c-5,0-9,4-9,9s4,9,9,9s9-4,9-9S19,41,14,41z M86,41 c-5,0-9,4-9,9s4,9,9,9s9-4,9-9S91,41,86,41z",
  fillEllipsisVertical: "M50,41c5,0,9,4,9,9s-4,9-9,9s-9-4-9-9S45,41,50,41z M41,86c0,5,4,9,9,9s9-4,9-9s-4-9-9-9S41,81,41,86z M41,14c0,5,4,9,9,9s9-4,9-9s-4-9-9-9S41,9,41,14z",
  fillStar: "M50,2.4l15.5,31.3l34.5,5L75,63.1l5.9,34.4L50,81.3L19.1,97.6L25,63.1L0,38.8l34.6-5L50,2.4z",
  fillNorth: "M30,20L50,0l20,20H30z",
  fillSouth: "M70,80l-20,20L30,80H70z",
  fillEast: "M80,30l20,20L80,70V30z",
  fillWest: "M20,70L0,50l20-20V70z",
  fillUpDown: "M55,80H45V20h10V80z",
  fillLeftRight: "M80,55H20V45h60V55z",
  fillLockBottom: "M87.5,95h-75V45h75V95z",
  fillReadOnly: "M62.5,50c0,6.9-5.6,12.5-12.5,12.5S37.5,56.9,37.5,50 S43.1,37.5,50,37.5S62.5,43.1,62.5,50z",
  fillPrivate: "M80,95H20V50h60V95z",
  fillChat1: "M32.5,50c0,4.1-3.4,7.5-7.5,7.5s-7.5-3.4-7.5-7.5s3.4-7.5,7.5-7.5S32.5,45.9,32.5,50z",
  fillChat2: "M82.5,50c0,4.1-3.4,7.5-7.5,7.5s-7.5-3.4-7.5-7.5s3.4-7.5,7.5-7.5S82.5,45.9,82.5,50z",
  fillX1: "M32.5,25c0,4.1-3.4,7.5-7.5,7.5s-7.5-3.4-7.5-7.5s3.4-7.5,7.5-7.5S32.5,20.9,32.5,25z",
  fillX2: "M82.5,25c0,4.1-3.4,7.5-7.5,7.5s-7.5-3.4-7.5-7.5s3.4-7.5,7.5-7.5S82.5,20.9,82.5,25z",
  fillX3: "M45,37.5c0,4.1-3.4,7.5-7.5,7.5S30,41.6,30,37.5s3.4-7.5,7.5-7.5S45,33.4,45,37.5z",
  fillX4: "M70,37.5c0,4.1-3.4,7.5-7.5,7.5S55,41.6,55,37.5s3.4-7.5,7.5-7.5S70,33.4,70,37.5z",
  fillX5: "M57.5,50c0,4.1-3.4,7.5-7.5,7.5s-7.5-3.4-7.5-7.5s3.4-7.5,7.5-7.5S57.5,45.9,57.5,50z",
  fillX6: "M45,62.5c0,4.1-3.4,7.5-7.5,7.5S30,66.6,30,62.5s3.4-7.5,7.5-7.5S45,58.4,45,62.5z",
  fillX7: "M70,62.5c0,4.1-3.4,7.5-7.5,7.5S55,66.6,55,62.5s3.4-7.5,7.5-7.5S70,58.4,70,62.5z",
  fillX8: "M32.5,75c0,4.1-3.4,7.5-7.5,7.5s-7.5-3.4-7.5-7.5s3.4-7.5,7.5-7.5S32.5,70.9,32.5,75z",
  fillX9: "M82.5,75c0,4.1-3.4,7.5-7.5,7.5s-7.5-3.4-7.5-7.5s3.4-7.5,7.5-7.5S82.5,70.9,82.5,75z",
  fillPng: "M100,76.1H50H30H0l25-25l15,15l25-25L100,76.1z M32.3,23.9c-4,0-7.3,3.3-7.3,7.3s3.3,7.3,7.3,7.3 s7.3-3.3,7.3-7.3S36.3,23.9,32.3,23.9z",
  fillPdf: "M100,66.1c-0.4-5.2-9.2-8.6-9.2-8.6c-3.4-1.2-7.1-1.8-11.3-1.8c-4.5,0-9.3,0.7-15.6,2.1 c-5.5-3.9-10.3-8.8-13.9-14.3c-1.6-2.4-3-4.8-4.2-7.1c3-7.2,5.7-15,5.2-23.7C50.6,5.7,47.5,1,43.2,1c-2.9,0-5.5,2.2-7.5,6.5 C32,15.1,33,24.9,38.5,36.6c-2,4.7-3.9,9.6-5.7,14.3c-2.2,5.9-4.5,11.9-7.1,17.7C18.4,71.5,12.4,75,7.5,79.2 C4.2,82.1,0.2,86.4,0,90.8c-0.1,2.1,0.6,4,2.1,5.6C3.7,98.1,5.6,99,7.8,99c7.1,0,14-9.8,15.3-11.8c2.6-4,5.1-8.4,7.5-13.4 c6.1-2.2,12.5-3.8,18.8-5.4l2.2-0.6c1.7-0.4,3.4-0.9,5.2-1.4c1.9-0.5,3.9-1,5.8-1.6c6.4,4.1,13.3,6.7,20.1,7.7 c5.7,0.8,10.7,0.3,14.1-1.4C99.9,69.5,100.1,67.1,100,66.1z M17.6,83.6c-2.8,4.3-7.5,8.8-9.8,8.8c-0.2,0-0.5,0-0.9-0.5 c-0.3-0.3-0.3-0.5-0.3-0.8c0.1-1.6,2.2-4.4,5.2-7c2.7-2.4,5.8-4.4,9.3-6.3C19.9,79.9,18.8,81.8,17.6,83.6z M41.6,10.3 c0.6-1.3,1.2-2,1.5-2.4c0.5,0.8,1.2,2.6,1.4,5.2c0.3,5.1-0.8,10-2.4,14.8C40,22,39.1,15.5,41.6,10.3z M55.1,60.1 c-1.8,0.5-3.5,0.9-5.1,1.4L47.7,62c-4.5,1.1-9.1,2.3-13.6,3.7c1.7-4.1,3.3-8.3,4.9-12.4c1.2-3,2.3-6.1,3.6-9.2 c0.6,1,1.3,2.1,1.9,3.1c3.1,4.7,6.9,9,11.3,12.7C55.6,59.9,55.3,60,55.1,60.1z M83.6,66.1c-3.7-0.5-7.4-1.7-11.1-3.3 c6.6-1,11.6-0.7,16,0.9c1,0.4,2.7,1.3,3.9,2.2C90.2,66.5,87.1,66.6,83.6,66.1z",
  fillCode: "M41.6,82.8L34.3,80l24.1-62.8l7.4,2.8L41.6,82.8z M74.8,75.2l-5.6-5.6L88.8,50L69.2,30.4l5.6-5.6L100,50 L74.8,75.2z M25.2,75.2L0,50l25.2-25.2l5.6,5.6L11.2,50l19.6,19.6L25.2,75.2z",
  fillFilePdf: "M72.5,57.2c-0.2-2.4-4.1-3.9-4.2-3.9c-1.5-0.5-3.2-0.8-5.1-0.8c-2,0-4.2,0.3-7,0.9c-2.5-1.8-4.6-4-6.3-6.4 c-0.7-1.1-1.3-2.2-1.9-3.2c1.4-3.2,2.6-6.7,2.4-10.7c-0.2-3.1-1.6-5.2-3.5-5.2c-1.3,0-2.5,1-3.4,2.9c-1.6,3.4-1.2,7.8,1.3,13.1 c-0.9,2.1-1.7,4.3-2.5,6.4c-1,2.6-2,5.4-3.2,8c-3.3,1.3-6,2.9-8.2,4.8c-1.5,1.3-3.2,3.2-3.3,5.2c0,1,0.3,1.8,0.9,2.5 C29.1,71.6,30,72,31,72c3.2,0,6.3-4.4,6.9-5.3c1.2-1.8,2.3-3.8,3.4-6c2.7-1,5.6-1.7,8.4-2.4l1-0.3c0.8-0.2,1.5-0.4,2.4-0.6 c0.9-0.2,1.7-0.5,2.6-0.7c2.9,1.8,6,3,9,3.5c2.6,0.4,4.8,0.2,6.4-0.6C72.5,58.8,72.5,57.7,72.5,57.2z M35.4,65.1 c-1.3,1.9-3.4,4-4.4,4c-0.1,0-0.2,0-0.4-0.2c-0.1-0.1-0.1-0.2-0.1-0.3c0-0.7,1-2,2.3-3.1c1.2-1.1,2.6-2,4.2-2.8 C36.5,63.5,36,64.3,35.4,65.1z M46.2,32.2c0.3-0.6,0.5-0.9,0.7-1.1c0.2,0.4,0.5,1.2,0.6,2.3c0.1,2.3-0.4,4.5-1.1,6.6 C45.5,37.4,45.1,34.5,46.2,32.2z M52.3,54.5c-0.8,0.2-1.6,0.4-2.3,0.6l-1,0.3c-2,0.5-4.1,1-6.1,1.7c0.8-1.9,1.5-3.8,2.2-5.6 c0.5-1.4,1.1-2.8,1.6-4.1c0.3,0.5,0.6,0.9,0.9,1.4c1.4,2.1,3.1,4.1,5.1,5.7C52.5,54.5,52.4,54.5,52.3,54.5z M65.1,57.2 c-1.6-0.2-3.3-0.7-5-1.5c2.9-0.4,5.2-0.3,7.2,0.4c0.5,0.2,1.2,0.6,1.7,1C68.1,57.4,66.7,57.5,65.1,57.2z",
  fillDnLogo: "M38.7,42.1c1.1,1.8,1.6,4.5,1.6,7.9c0,2.5-0.4,4.6-1.1,6.4c-1.3,3.3-3.6,4.9-6.9,4.9h-6.5V39.3h6.5 C35.5,39.3,37.6,40.2,38.7,42.1z M100,50c0,27.6-22.4,50-50,50S0,77.6,0,50S22.4,0,50,0S100,22.4,100,50z M47.4,49.5 c0-1.8-0.2-3.6-0.6-5.6c-0.4-1.9-1.2-3.8-2.4-5.4c-1.5-2.1-3.4-3.5-5.7-4.3c-1.4-0.5-3.1-0.7-5.2-0.7H19v33.6h14.5 c5.1,0,8.8-2.1,11.3-6.3C46.5,57.7,47.4,53.9,47.4,49.5z M79.8,33.5h-6.5v23.4L59.9,33.5h-7.4v33.6h6.5V43.3l13.7,23.8h7V33.5z"
};

var iconTemplates = {
  precursor: {
    paths: [strokes.strokePrecursor]
  },
  download: {
    paths: [strokes.strokeDownload]
  },
  check: {
    paths: [strokes.strokeCheck]
  },
  times: {
    paths: [strokes.strokeTimes]
  },
  cursor: {
    paths: [strokes.strokeCursor]
  },
  rectangle: {
    paths: [strokes.strokeRectangle]
  },
  line: {
    paths: [strokes.strokeLine]
  },
  text: {
    paths: [strokes.strokeText]
  },
  pencil: {
    paths: [strokes.strokePencil]
  },
  ellipse: {
    paths: [strokes.strokeEllipse]
  },
  mic: {
    paths: [strokes.strokeMic]
  },
  micOff: {
    paths: [
      strokes.strokeMic,
      strokes.strokeSlashBackward
    ]
  },
  user: {
    paths: [strokes.strokeUser]
  },
  users: {
    paths: [strokes.strokeUsers]
  },
  bullet: {
    paths: [strokes.strokeDot]
  },
  chats: {
    paths: [strokes.strokeChats]
  },
  crosshair: {
    paths: [strokes.strokeCrosshair]
  },
  ibeam: {
    paths: [strokes.strokeIbeam]
  },
  blog: {
    paths: [strokes.strokeBlog]
  },
  clock: {
    paths: [strokes.strokeClock]
  },
  delete: {
    paths: [strokes.strokeDelete]
  },
  shift: {
    paths: [strokes.strokeShift]
  },
  option: {
    paths: [strokes.strokeOption]
  },
  control: {
    paths: [strokes.strokeControl]
  },
  command: {
    paths: [strokes.strokeCommand]
  },
  esc: {
    paths: [strokes.strokeEsc]
  },
  space: {
    paths: [strokes.strokeSpace]
  },
  mouse: {
    paths: [strokes.strokeMouse]
  },
  globe: {
    paths: [strokes.strokeGlobe]
  },
  doc: {
    paths: [strokes.strokeDoc]
  },
  docs: {
    paths: [strokes.strokeDocs]
  },
  docsTeam: {
    paths: [strokes.strokeDocsTeam]
  },
  newdoc: {
    paths: [strokes.strokeNewdoc]
  },
  login: {
    paths: [strokes.strokeLogin]
  },
  logout: {
    paths: [strokes.strokeLogout]
  },
  info: {
    paths: [strokes.strokeInfo]
  },
  home: {
    paths: [strokes.strokeHome]
  },
  hash: {
    paths: [strokes.strokeHash]
  },
  arrowUp: {
    paths: [strokes.strokeArrowUp]
  },
  arrowDown: {
    paths: [strokes.strokeArrowDown]
  },
  arrowLeft: {
    paths: [strokes.strokeArrowLeft]
  },
  arrowRight: {
    paths: [strokes.strokeArrowRight]
  },
  at: {
    paths: [strokes.strokeAt]
  },
  sharing: {
    paths: [strokes.strokeSharing]
  },
  email: {
    paths: [strokes.strokeEmail]
  },
  phone: {
    paths: [strokes.strokePhone]
  },
  activity: {
    paths: [strokes.strokeActivity]
  },
  credit: {
    paths: [strokes.strokeCredit]
  },
  heart: {
    paths: [strokes.strokeHeart]
  },
  public: {
    paths: [strokes.strokePublic]
  },
  team: {
    paths: [strokes.strokeTeam]
  },
  requests: {
    paths: [strokes.strokeRequests]
  },
  star: {
    paths: [strokes.strokeStar]
  },
  loading: {
    paths: [strokes.strokeBorderCircle]
  },
  minus: {
    paths: [strokes.strokeHorizontal]
  },
  plus: {
    paths: [
      strokes.strokeHorizontal,
      strokes.strokeVertical
    ]
  },
  clips: {
    paths: [
      strokes.strokeBorderSquare,
      strokes.strokeHorizontal,
      strokes.strokeVertical
    ]
  },
  readOnly: {
    paths: [
      strokes.strokeReadOnly,
      strokes.fillReadOnly
    ]
  },
  settings: {
    paths: [
      strokes.strokeDot,
      strokes.strokeCog
    ]
  },
  menu: {
    paths: [
      strokes.strokeMenuTop,
      strokes.strokeMenuMid,
      strokes.strokeMenuBtm
    ]
  },
  sound: {
    paths: [
      strokes.strokeSound,
      strokes.strokeWave1,
      strokes.strokeWave2,
      strokes.strokeWave3
    ]
  },
  lock: {
    paths: [
      strokes.strokePrivate,
      strokes.strokePrivateBottom
    ]
  },
  private: {
    paths: [
      strokes.strokePrivate,
      strokes.fillPrivate
    ]
  },
  chat: {
    paths: [
      strokes.strokeChat,
      strokes.fillChat1,
      strokes.fillX5,
      strokes.fillChat2
    ]
  },
  chatTeam: {
    paths: [strokes.strokeChatTeam]
  },
  soundOff: {
    paths: [strokes.strokeSound]
  },
  soundMin: {
    paths: [
      strokes.strokeSound,
      strokes.strokeWave1
    ]
  },
  soundMed: {
    paths: [
      strokes.strokeSound,
      strokes.strokeWave1,
      strokes.strokeWave2
    ]
  },
  soundMax: {
    paths: [
      strokes.strokeSound,
      strokes.strokeWave1,
      strokes.strokeWave2,
      strokes.strokeWave3
    ]
  },
  soundMute: {
    paths: [
      strokes.strokeSound,
      strokes.strokeWave1,
      strokes.strokeWave2,
      strokes.strokeWave3,
      strokes.strokeSlashBackward
    ]
  },
  click: {
    paths: [
      strokes.fillClickCursor,
      strokes.strokeClick1,
      strokes.strokeClick2,
      strokes.strokeClick3
    ]
  },
  chatMorph: {
    paths: [
      strokes.strokeChat,
      strokes.fillX1,
      strokes.fillX2,
      strokes.fillX3,
      strokes.fillX4,
      strokes.fillX5,
      strokes.fillX6,
      strokes.fillX7,
      strokes.fillX8,
      strokes.fillX9
    ]
  },
  logomark: {
    paths: [strokes.fillLogomark]
  },
  twitter: {
    paths: [strokes.fillTwitter]
  },
  googleLogo: {
    paths: [strokes.fillGoogle]
  },
  dribbble: {
    paths: [strokes.fillDribbble]
  },
  github: {
    paths: [strokes.fillGithub]
  },
  slack: {
    paths: [strokes.fillSlack]
  },
  cognitect: {
    paths: [strokes.fillCognitect]
  },
  cognician: {
    paths: [strokes.fillCognician]
  },
  dnLogo: {
    paths: [strokes.fillDnLogo]
  },
  filePng: {
    paths: [strokes.fillPng]
  },
  filePdf: {
    paths: [strokes.fillPdf]
  },
  fileSvg: {
    paths: [strokes.fillCode]
  },
  ellipsis: {
    paths: [strokes.fillEllipsis]
  },
  dotMenu: {
    paths: [strokes.fillEllipsisVertical]
  },
  starred: {
    paths: [strokes.fillStar]
  },
  scroll: {
    paths: [
      strokes.fillScrollNorth,
      strokes.fillDot,
      strokes.fillScrollSouth
    ]
  },
  north: {
    paths: [
      strokes.fillUpDown,
      strokes.fillNorth
    ]
  },
  south: {
    paths: [
      strokes.fillUpDown,
      strokes.fillSouth
    ]
  },
  east: {
    paths: [
      strokes.fillLeftRight,
      strokes.fillEast
    ]
  },
  west: {
    paths: [
      strokes.fillLeftRight,
      strokes.fillWest
    ]
  },
  northSouth: {
    paths: [
      strokes.fillUpDown,
      strokes.fillNorth,
      strokes.fillSouth
    ]
  },
  eastWest: {
    paths: [
      strokes.fillLeftRight,
      strokes.fillEast,
      strokes.fillWest
    ]
  }
};

function Icons$Icon(Props) {
  var className = Props.className;
  var colorOpt = Props.color;
  var widthOpt = Props.width;
  var heightOpt = Props.height;
  var fillOpt = Props.fill;
  var icon = Props.icon;
  var onClick = Props.onClick;
  var color = colorOpt !== undefined ? colorOpt : "white";
  var width = widthOpt !== undefined ? widthOpt : "24";
  var height = heightOpt !== undefined ? heightOpt : "24";
  var fill = fillOpt !== undefined ? fillOpt : "none";
  var tmp = {
    height: height,
    width: width,
    fill: fill,
    vectorEffect: "non-scaling-stroke",
    viewBox: "0 0 100 100"
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  if (onClick !== undefined) {
    tmp.onClick = Caml_option.valFromOption(onClick);
  }
  return React.createElement("svg", tmp, React.createElement("circle", {
                  cx: "256",
                  cy: "378.5",
                  fill: color,
                  r: "25"
                }), Belt_Array.mapWithIndex(icon.paths, (function (idx, path) {
                    return React.createElement("path", {
                                key: String(idx),
                                d: path,
                                fill: color
                              });
                  })));
}

var Icon = {
  make: Icons$Icon
};

function Icons$Volume$Mute(Props) {
  var className = Props.className;
  var color = Props.color;
  var width = Props.width;
  var height = Props.height;
  var tmp = {
    icon: iconTemplates.soundMute
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  if (width !== undefined) {
    tmp.width = Caml_option.valFromOption(width);
  }
  if (height !== undefined) {
    tmp.height = Caml_option.valFromOption(height);
  }
  return React.createElement(Icons$Icon, tmp);
}

var Mute = {
  make: Icons$Volume$Mute
};

function Icons$Volume$Off(Props) {
  var className = Props.className;
  var color = Props.color;
  var width = Props.width;
  var height = Props.height;
  var tmp = {
    icon: iconTemplates.soundOff
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  if (width !== undefined) {
    tmp.width = Caml_option.valFromOption(width);
  }
  if (height !== undefined) {
    tmp.height = Caml_option.valFromOption(height);
  }
  return React.createElement(Icons$Icon, tmp);
}

var Off = {
  make: Icons$Volume$Off
};

function Icons$Volume$Min(Props) {
  var className = Props.className;
  var color = Props.color;
  var width = Props.width;
  var height = Props.height;
  var tmp = {
    icon: iconTemplates.soundMin
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  if (width !== undefined) {
    tmp.width = Caml_option.valFromOption(width);
  }
  if (height !== undefined) {
    tmp.height = Caml_option.valFromOption(height);
  }
  return React.createElement(Icons$Icon, tmp);
}

var Min = {
  make: Icons$Volume$Min
};

function Icons$Volume$Max(Props) {
  var className = Props.className;
  var color = Props.color;
  var width = Props.width;
  var height = Props.height;
  var tmp = {
    icon: iconTemplates.soundMax
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  if (width !== undefined) {
    tmp.width = Caml_option.valFromOption(width);
  }
  if (height !== undefined) {
    tmp.height = Caml_option.valFromOption(height);
  }
  return React.createElement(Icons$Icon, tmp);
}

var Max = {
  make: Icons$Volume$Max
};

function Icons$Volume$Auto(Props) {
  var className = Props.className;
  var color = Props.color;
  var width = Props.width;
  var height = Props.height;
  var level = Props.level;
  var onClick = Props.onClick;
  var icon = level === 0 ? iconTemplates.soundOff : (
      level <= 10 ? iconTemplates.soundMin : (
          level <= 50 ? iconTemplates.soundMed : iconTemplates.soundMax
        )
    );
  var tmp = {
    icon: icon
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  if (width !== undefined) {
    tmp.width = Caml_option.valFromOption(width);
  }
  if (height !== undefined) {
    tmp.height = Caml_option.valFromOption(height);
  }
  if (onClick !== undefined) {
    tmp.onClick = Caml_option.valFromOption(onClick);
  }
  return React.createElement(Icons$Icon, tmp);
}

var Auto = {
  make: Icons$Volume$Auto
};

var Volume = {
  Mute: Mute,
  Off: Off,
  Min: Min,
  Max: Max,
  Auto: Auto
};

function Icons$MouseCursor(Props) {
  var className = Props.className;
  var color = Props.color;
  var width = Props.width;
  var height = Props.height;
  var tmp = {
    icon: iconTemplates.cursor
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  if (width !== undefined) {
    tmp.width = Caml_option.valFromOption(width);
  }
  if (height !== undefined) {
    tmp.height = Caml_option.valFromOption(height);
  }
  return React.createElement(Icons$Icon, tmp);
}

var MouseCursor = {
  make: Icons$MouseCursor
};

function Icons$Chats(Props) {
  var className = Props.className;
  var color = Props.color;
  var width = Props.width;
  var height = Props.height;
  var tmp = {
    icon: iconTemplates.chats
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  if (color !== undefined) {
    tmp.color = Caml_option.valFromOption(color);
  }
  if (width !== undefined) {
    tmp.width = Caml_option.valFromOption(width);
  }
  if (height !== undefined) {
    tmp.height = Caml_option.valFromOption(height);
  }
  return React.createElement(Icons$Icon, tmp);
}

var Chats = {
  make: Icons$Chats
};

export {
  Play ,
  Inspect ,
  GraphQL ,
  PureScript ,
  TypeScript ,
  Export ,
  Trash ,
  Search ,
  CaretUp ,
  CaretRight ,
  Prettier ,
  Form ,
  Gears ,
  Save ,
  Link ,
  RunLink ,
  List ,
  OpenInNew ,
  AddLink ,
  Mediation ,
  ContentCopy ,
  Login ,
  Remote ,
  MonoAddBlocks ,
  Warning ,
  Visibility ,
  EditPencil ,
  Plus ,
  Help ,
  strokes ,
  iconTemplates ,
  Icon ,
  Volume ,
  MouseCursor ,
  Chats ,
  
}
/* iconTemplates Not a pure module */
