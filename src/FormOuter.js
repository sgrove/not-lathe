// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Form from "./Form.js";
import * as Acorn from "./bindings/Acorn.js";
import * as Curry from "bs-platform/lib/es6/curry.mjs";
import * as Debug from "./Debug.js";
import * as React from "react";
import * as Js_dict from "bs-platform/lib/es6/js_dict.mjs";
import * as Graphql from "graphql";
import * as GraphQLJs from "./bindings/GraphQLJs.js";
import Head from "next/head";
import * as OneGraphRe from "./OneGraphRe.js";
import * as Router from "next/router";
import * as Mock from "@graphql-tools/mock";

import dynamic from 'next/dynamic'
;

function FormOuter$Inner(Props) {
  var match = React.useState(function () {
        return {
                schema: /* Loading */0
              };
      });
  var setState = match[1];
  React.useEffect((function () {
          var promise = OneGraphRe.fetchOneGraph(OneGraphRe.auth, Graphql.getIntrospectionQuery(), undefined, undefined);
          GraphQLJs.install(undefined);
          promise.then(function (result) {
                var basicSchema = Graphql.buildClientSchema(result.data);
                var schema = Mock.addMocksToSchema({
                      schema: basicSchema,
                      mocks: {
                        JSON: (function (param) {
                            return {};
                          })
                      }
                    });
                Debug.assignToWindowForDeveloperDebug("mockedSchema", schema);
                Curry._1(setState, (function (param) {
                        return {
                                schema: {
                                  _0: schema,
                                  [Symbol.for("name")]: "Loaded"
                                }
                              };
                      }));
                return Promise.resolve(result);
              });
          
        }), []);
  var router = Router.useRouter();
  var chainId = Js_dict.get(router.query, "form_id");
  var schema = match[0].schema;
  return React.createElement("div", undefined, React.createElement(Head, {
                  children: React.createElement("script", {
                        src: "https://unpkg.com/typescript@latest/lib/typescriptServices.js"
                      })
                }), schema ? React.createElement(React.Fragment, undefined, chainId !== undefined ? React.createElement(Form.make, {
                          schema: schema._0,
                          chainId: chainId
                        }) : "No form id found") : "Loading schema...");
}

var Inner = {
  make: FormOuter$Inner
};

function $$default(param) {
  var match = React.useState(function () {
        return {
                msg: "Loading diagram dependencies...",
                mod: undefined
              };
      });
  var setState = match[1];
  var state = match[0];
  React.useEffect((function () {
          var __x = import("./components/Studio.js");
          __x.then(function (Studio) {
                return Promise.resolve(Curry._1(setState, (function (param) {
                                  return {
                                          msg: "Loaded!",
                                          mod: Studio
                                        };
                                })));
              });
          
        }), []);
  var mod = state.mod;
  if (mod !== undefined) {
    return React.createElement(FormOuter$Inner, {
                mod: mod
              });
  } else {
    return state.msg;
  }
}

var _r = Acorn.source;

export {
  Inner ,
  $$default ,
  $$default as default,
  _r ,
  
}
/*  Not a pure module */
